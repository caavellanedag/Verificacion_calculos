/*---------------------------------------------------------------------------------------------

COMPARACION SISTEMAS

---------------------------------------------------------------------------------------------**/

%let _timer_start = %sysfunc(datetime());
%LET RUTA = \\prowin04\cavellaneda\EJERCICIOS\EJERCICIOS 2021\VERIFICACION_CALCULOS\COMPARACION_SISTEMAS;
LIBNAME PRUEBA "\\prowin04\cavellaneda\EJERCICIOS\EJERCICIOS 2021\VERIFICACION_CALCULOS\COMPARACION_SISTEMAS";

%LET FECHA_CORTE = 211129;
%LET VIGENCIA = 2022;
%LET VIGENCIA_2 = 22;
%LET YEAR = &VIGENCIA. - 1;
%LET VIGENCIA_ANT = %sysevalf(&VIGENCIA.-1);
%LET VIGENCIA_ANT_2 = %sysevalf(&VIGENCIA_2.-1);
%LET VIGENCIA_ANT_ANT = %sysevalf(&VIGENCIA.-2);
%LET VIGENCIA_ANT_ANT_2 = %sysevalf(&VIGENCIA_2.-2);


proc import datafile = "&RUTA.\input\211104_REPORTE_FINAL_M01_1.xlsx"
 out  =  VARS_M01_1
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M01_1 separated by ' '
    from VARS_M01_1;
quit;



proc import datafile = "&RUTA.\input\211105_REPORTE_FINAL_M01_2.xlsx"
 out  =  VARS_M01_2
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M01_2 separated by ' '
    from VARS_M01_2;
quit;




proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M01_3.xlsx"
 out  =  VARS_M01_3
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M01_3 separated by ' '
    from VARS_M01_3;
quit;




proc import datafile = "&RUTA.\input\211101_REPORTE_FINAL_M02_4.xlsx"
 out  =  VARS_M02_4
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M02_4 separated by ' '
    from VARS_M02_4;
quit;


proc import datafile = "&RUTA.\input\211026_REPORTE_FINAL_M02_5.xlsx"
 out  =  VARS_M02_5
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M02_5 separated by ' '
    from VARS_M02_5;
quit;


proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M02_6.xlsx"
 out  =  VARS_M02_6
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M02_6 separated by ' '
    from VARS_M02_6;
quit;


proc import datafile = "&RUTA.\input\211101_REPORTE_FINAL_M03.xlsx"
 out  =  VARS_M03
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M03 separated by ' '
    from VARS_M03;
quit;


proc import datafile = "&RUTA.\input\211104_REPORTE_FINAL_M04.xlsx"
 out  =  VARS_M04
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M04 separated by ' '
    from VARS_M04;
quit;



proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M05.xlsx"
 out  =  VARS_M05
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M05 separated by ' '
    from VARS_M05;
quit;



proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M06_123.xlsx"
 out  =  VARS_M06_123
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M06_123 separated by ' '
    from VARS_M06_123;
quit;


proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M06_456.xlsx"
 out  =  VARS_M06_456
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M06_456 separated by ' '
    from VARS_M06_456;
quit;


DATA PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI; /*SET COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE.;*/
 SET COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE.; /*PRUEBA.PREDIO_VISTA_2020_MODELOS;*/
IF ACTUALIZADO = 1; 
IF CODIGO_USO=' ' THEN CODIGO_USO='000'; ELSE CODIGO_USO=CODIGO_USO;
RUN; 

/******************************************
PREDIOS SIN VALOR MODELO O TABLA
*******************************************/

/*PROC SQL;    CREATE TABLE FILTRO_SIN_VI_MODEL AS 
   SELECT *
   FROM PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI
WHERE (VALOR_INTEGRAL_&VIGENCIA. = . AND LIQUIDACION = 'MODEL');
QUIT;

PROC SQL;    CREATE TABLE FILTRO_SIN_VALOR_TABLA AS 
   SELECT *
   FROM PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI
WHERE (VALOR_UNITARIO_&VIGENCIA. = . AND LIQUIDACION = 'TABLA' & MODELO_USO NOT IN ('T21','T22'));
QUIT;

PROC SQL;    CREATE TABLE FILTRO_SIN_VALOR_TABLAPARQ AS 
   SELECT *
   FROM PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI
WHERE (PRODUCTO_&VIGENCIA. = . AND LIQUIDACION = 'TABLA' & MODELO_USO  IN ('T21','T22'));
QUIT;
													/*FIN*/

%LET PREDIOS_RURALES = ('208125',
'208126',
'208107',
'201109',
'201110',
'201302',
'201304',
'201309',
'201317',
'201408',
'201502',
'201503',
'202204',
'202309',
'202404',
'202410',
'202506',
'202511',
'202601',
'204104',
'204106',
'204129',
'204131',
'204304',
'205101',
'205109',
'205308',
'205316',
'205318',
'205319',
'205320',
'205322',
'205401',
'205402',
'208101',
'208104',
'208108',
'208110',
'208127',
'208128',
'208129',
'208203',
'201404',
'201508',
'202203',
'202502',
'204107',
'205102',
'208103',
'208111');

PROC SQL;
CREATE TABLE COMPARA_MODSISTEMAS AS SELECT *
FROM ODBCLIB.VALORES_CONSTRUCCION
WHERE MODELO_APLICADO NOT IN ('000', '') AND VIGENCIA = 2022;
QUIT;

DATA COMPARA_MODSISTEMAS_UR;
SET COMPARA_MODSISTEMAS;
IF SUBSTR(CODIGO_BARRIO,1,1) = '0' OR CODIGO_BARRIO IN &PREDIOS_RURALES.;
LLAVE = COMPRESS(CODIGO_BARRIO || CODIGO_MANZANA || CODIGO_PREDIO || CODIGO_CONSTRUCCION || CODIGO_RESTO);
AREA_USO = ROUND(AREA_USO,.01);
VETUSTEZ_SIS = VETUSTEZ;
IF (2022 - VETUSTEZ = 0) THEN EDAD_SIS = 1; ELSE EDAD_SIS = (2022-VETUSTEZ);
PUNTAJE_SIS = PUNTAJE;
ESTRATO_SIS = ESTRATO;
VLR_M2_CONSTRUCCION_SIS = VLR_M2_CONSTRUCCION;
FASE_SIS = FASE;
CODIGO_DESTINO_SIS = CODIGO_DESTINO;
VALOR_INTEGRAL_SIS = VALOR_INTEGRAL;
IF MODELO_APLICADO='AVAES' THEN MODELO_APLICADO_SIS='AVESP     '; ELSE MODELO_APLICADO_SIS=PUT(MODELO_APLICADO, $10.); 
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CLASE_CONSTRUCCION UNIDAD_CALIFICADA CODIGO_USO AREA_USO LLAVE
VETUSTEZ EDAD_SIS PUNTAJE_SIS CODIGO_DESTINO_SIS ESTRATO_SIS VLR_M2_CONSTRUCCION_SIS VALOR_INTEGRAL_SIS FASE_SIS MODELO_APLICADO_SIS;
RUN;


/*INTERSECCION A NIVEL UNIDAD*/
proc sort data=PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI;
by  CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION ;RUN;
proc sort data=COMPARA_MODSISTEMAS_UR;
by  CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION ;RUN;

DATA INTER_SISTEMAS_ESTADISTICA_0; /*BASE A COMPARAR PREDIOS MAS USO MULTIPLE*/
merge PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI (in=en_uno) COMPARA_MODSISTEMAS_UR (in=en_dos);
by CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION
;if en_dos and en_uno; RUN;


/*LO QUE ESTA EN SISTEMAS Y NO EN ESTADISTICA o viceversa*/

/*DATA SIST_COMPLEMENTO; /*LO QUE ESTA EN ESTADISTICA y no en SISTEMAS == DEBERIAN SER LOTES*/
/*merge PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI (in=en_uno) PRUEBA.COMPARA_MODSISTEMAS_UR (in=en_dos);
by CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION
;if en_uno and not en_dos; RUN;

DATA EST_COMPLEMENTO; 
merge PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI (in=en_uno) PRUEBA.COMPARA_MODSISTEMAS_UR (in=en_dos);
by CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION
;if en_dos and not en_uno; RUN;*/

/*DATA PROVISIONAL; SET INTER_SISTEMAS_ESTADISTICA_0;
IF MODELO_0 IN ('T23') THEN VALOR_INTEGRAL_&VIGENCIA.=VALOR_UNITARIO_&VIGENCIA.; 
IF (MODELO_0 IN ('T21','T22')) THEN VALOR_INTEGRAL_&VIGENCIA. = PRODUCTO_&VIGENCIA./AREA_CONSTRUIDA;
RUN;*/

DATA PRUEBA.MODELOSIS_VACIOS; SET /*PROVISIONAL*/INTER_SISTEMAS_ESTADISTICA_0;
IF MODELO_APLICADO_SIS = MODELO_USO THEN COMPARA_MODELO = "CORRECTO"; 
IF MODELO_APLICADO_SIS NE MODELO_USO THEN COMPARA_MODELO = "INCORREC"; 
IF FASE_SIS = UNIDAD_LIQUIDACION THEN COMPARA_FASE = "CORRECTO"; 
IF FASE_SIS NE UNIDAD_LIQUIDACION THEN COMPARA_FASE = "INCORREC"; 
IF SUBSTR(CODIGO_BARRIO,1,1) = '0' THEN URBANO_RURAL = 'URBANO'; ELSE URBANO_RURAL = 'RURAL';

IF ABS(VALOR_UNITARIO_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) <= 1 THEN COMPARA_VLRCONS_M2 = "CORRECTO";  /*tabla: valor m2 y T23 */
IF ABS(VALOR_UNITARIO_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) > 1 THEN COMPARA_VLRCONS_M2 = "INCORREC";

IF ABS(VALOR_M2_CONSTRUCCION_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) <= 5000 THEN COMPARA_AVALUOCOM = "CORRECTO";  /*(1)tabla: t21 y t22 parquederos */
IF ABS(VALOR_M2_CONSTRUCCION_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) > 5000 THEN COMPARA_AVALUOCOM = "INCORREC"; 

IF ABS(VALOR_INTEGRAL_&VIGENCIA. - VALOR_INTEGRAL_SIS) <= 5000 THEN COMPARA_VAL_INT = "CORRECTO"; /*T23 DEPOSITOS Y MODELOS*/
IF ABS(VALOR_INTEGRAL_&VIGENCIA. - VALOR_INTEGRAL_SIS) > 5000 THEN COMPARA_VAL_INT = "INCORREC";

IF ABS(VALOR_M2_CONSTRUCCION_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) <= 1 THEN COMPARA_VLRCONS = "CORRECTO";  /*valor m2 *area construcción*/ 
IF ABS(VALOR_M2_CONSTRUCCION_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) > 1 THEN COMPARA_VLRCONS = "INCORREC";

IF MODELO_USO = 	'AV_ESP_BIC'	AND 	MODELO_APLICADO_SIS =	'AVBIC'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'AV_ESP_CC'	    AND 	MODELO_APLICADO_SIS =	'AVECC'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'AV_ESP_USO'	AND 	MODELO_APLICADO_SIS =	'AVUSO'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'LOTES_NPH'	    AND 	MODELO_APLICADO_SIS =	'LTNPH'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'LOTES_PH'	    AND 	MODELO_APLICADO_SIS =	'LTPH'   THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'M06_123'	    AND 	MODELO_APLICADO_SIS =	'M06_1'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'M06_456'	    AND 	MODELO_APLICADO_SIS =	'M06_4'  THEN COMPARA_MODELO = "CORRECTO";

RUN;




/***************************
1. DIFERENCIAS VARIABLE MODELO
****************************/

PROC SQL; CREATE TABLE INCORRECTO_MODELO AS SELECT  /*DIFERENCIAS VARIABLE MODELO*/
CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, UNIDAD_CALIFICADA, CLASE_CONSTRUCCION, LLAVE,	
CODIGO_DESTINO,	CLASE_PREDIO,	CODIGO_ESTRATO,	CONSERVACION_HISTORICA,		EDAD,	PUNTAJE,		
/*MARCA_MANZANA,*/		NUMERO_UNIDADES,	NUM_USOS,	ARMAZON_ESTRUCTURA,	MUROS_ESTRUCTURA, AREA_TERRENO,	AREA_CONSTRUIDA,	AREA_USO,	
CODIGO_USO,	CODIGO_USOP,  PREDIO_UNIDCAL_COMPL, /*UM_MODELO_PH, UM_MODELO_AVES, */MARCA_MANZANA, NOMBRE_MODELO_0,	MODELO_USO,	MODELO_APLICADO_SIS, FASE_SIS,	UNIDAD_LIQUIDACION AS FASE_EST,	
COMPARA_MODELO/*,	COMPARA_FASE*/  
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_MODELO='INCORREC'; QUIT;



PROC EXPORT DATA= INCORRECTO_MODELO
			outfile= "&RUTA.\output\&FECHA_CORTE._BD_DIFERENCIAS_VARIABLE_MODELO.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Variable Modelo";
			RUN;



/***************************
4. DIFERENCIAS TABLAS NPH 
****************************/

PROC SQL; CREATE TABLE INCORRECTO_VR_TABL_NPH AS SELECT  /*DIFERENCIAS VALORS TABLAS NPH*/
CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, UNIDAD_CALIFICADA, CLASE_CONSTRUCCION, LLAVE,	
ARMAZON_ESTRUCTURA,	MUROS_ESTRUCTURA, LIQUIDACION,	NOMBRE_MODELO_0,	 /*AVALUO_ESP,*/	 FASE_SIS,	UNIDAD_LIQUIDACION as FASE_EST, CODIGO_DESTINO, CODIGO_DESTINO_SIS,	CLASE_PREDIO, 
CONSERVACION_HISTORICA, NUMERO_UNIDADES,	NUM_USOS, CODIGO_USO,	CODIGO_USOP, EC_MO_ID, MODELO_USO AS MODELO_APLICADO_EST,	MODELO_APLICADO_SIS,	CODIGO_ESTRATO, ESTRATO_SIS,	EDAD, EDAD_SIS,	PUNTAJE, PUNTAJE_SIS,		
MARCA_MANZANA,	 AREA_TERRENO,	AREA_CONSTRUIDA,	AREA_USO,	
VLR_M2_CONSTRUCCION_SIS, VALOR_M2_CONSTRUCCION_&VIGENCIA., VALOR_UNITARIO_&VIGENCIA., NOMBRE_MODELO_0, 
/*VALOR_CONSTRUCCION_COM_2020_UM, VALOR_AVALUO_COM_2020, */
COMPARA_MODELO, COMPARA_VLRCONS_M2
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VLRCONS_M2='INCORREC'& LIQUIDACION IN ('TABLA') & MODELO_USO NOT IN ('T21','T22','T23'); QUIT;

PROC SQL; CREATE TABLE INCORRECTO_AVES AS SELECT
CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, UNIDAD_CALIFICADA, LLAVE,
FASE_SIS,	UNIDAD_LIQUIDACION as FASE_EST,
NUMERO_UNIDADES,	NUM_USOS, CODIGO_USO,	CODIGO_USOP,  LIQUIDACION, ORIGEN, NOMBRE_MODELO_0, MODELO_USO AS MODELO_APLICADO_EST,	MODELO_APLICADO_SIS,
VLR_M2_CONSTRUCCION_SIS, VALOR_M2_CONSTRUCCION_&VIGENCIA., VALOR_UNITARIO_UC_AVES, 
COMPARA_MODELO, COMPARA_VLRCONS
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VLRCONS='INCORREC'& LIQUIDACION IN ('AVESP')
ORDER BY CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO
; QUIT;


PROC SQL; CREATE TABLE INCORRECTO_T21T22_PARQ_VI AS SELECT /*DIFERENCIAS VALOR INTEGRAL PH T21 Y T22*/
CHIP, CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, UNIDAD_CALIFICADA, CLASE_CONSTRUCCION, CLASE_PREDIO, LLAVE,	
CODIGO_DESTINO, CODIGO_DESTINO_SIS,			AREA_USO,	CODIGO_USO, NUM_USOS, NUMERO_UNIDADES,	CODIGO_USOP, ZHF_2020, ZHF_2022,	NOMBRE_MODELO_0,	MODELO_USO AS MODELO_APLICADO_EST,	MODELO_APLICADO_SIS, 	
FASE_SIS,	UNIDAD_LIQUIDACION  as FASE_EST,	CODIGO_ESTRATO, ESTRATO_SIS,	AREA_CONSTRUIDA, VLR_M2_CONSTRUCCION_SIS, PRODUCTO_&VIGENCIA., /*VALOR_AVALUO_COM_2019,*/ VALOR_INTEGRAL_&VIGENCIA., VALOR_INTEGRAL_SIS, 
VALOR_M2_CONSTRUCCION_&VIGENCIA.,
VLR_M2_CONSTRUCCION_SIS,
COMPARA_AVALUOCOM
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_AVALUOCOM='INCORREC' & MODELO_USO IN ('T21','T22') ; QUIT;

/*
PROC SQL; CREATE TABLE INCORRECTO_T21T22_PARQ_VI2 AS SELECT 
CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0, 	
AREA_USO,	CODIGO_ESTRATO, AREA_CONSTRUIDA,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA.
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_AVALUOCOM='INCORREC' & MODELO_USO IN ('T21','T22') ; QUIT;
*/
/*proc export data=INCORRECTO_T21T22_PARQ_VI2   outfile='&RUTA.\DIF_T21T22_PARQ_VI.txt'   dbms=dlm  replace;  delimiter='|';  RUN;*/


/*****************************************************************************

			7. DIFERENCIAS VALOR INTEGRAL - MODELOS Y T23 

*********************************************************************************/


/*T23 Depósito (Lockers) PH*/

PROC SQL; CREATE TABLE INCORRECTO_VI_DEPOSITOS AS SELECT
CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, LLAVE, CODIGO_USO,	CODIGO_USOP,	
NOMBRE_MODELO_0,	MODELO_USO AS MODELO_APLICADO_EST, MODELO_APLICADO_SIS,	 FASE_SIS, UNIDAD_LIQUIDACION as FASE_EST,  CODIGO_ESTRATO, ESTRATO_SIS, AREA_CONSTRUIDA,
VLR_M2_CONSTRUCCION_SIS,  VALOR_UNITARIO_&VIGENCIA., /*VALOR_M2_CONSTRUCCION_&VIGENCIA., VALOR_AVALUO_COM_2019,*/ 
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA., COMPARA_VAL_INT
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VAL_INT='INCORREC'& MODELO_USO IN ('T23'); QUIT;
/*
PROC SQL; CREATE TABLE INCORRECTO_VI_DEPOSITOS2 AS SELECT 
CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0, 	
AREA_USO,	CODIGO_ESTRATO, AREA_CONSTRUIDA,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA.
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VAL_INT='INCORREC' & MODELO_USO IN ('T23') ; QUIT;
*/
/*
proc export data=INCORRECTO_VI_DEPOSITOS2   outfile='&RUTA.\DIF_T23_DEPOSITOSPH_VI.txt'   dbms=dlm  replace;  delimiter='|';  RUN;
*/

/******************************************
7. DIFERENCIAS VALOR INTEGRAL - MODELOS
*******************************************/


PROC SQL; CREATE TABLE PRUEBA.INCORRECTO_VI_MODEL AS SELECT *
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VAL_INT='INCORREC'& LIQUIDACION IN ('MODEL'); QUIT;


DATA FILTRO_M01_1;
SET PRUEBA.INCORRECTO_VI_MODEL;
WHERE COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M01_1';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M01_1. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;

DATA FILTRO_M01_2;
SET PRUEBA.INCORRECTO_VI_MODEL;
IF COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M01_2';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M01_2. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;

DATA FILTRO_M01_3;
SET PRUEBA.INCORRECTO_VI_MODEL;
IF COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M01_3';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M01_3. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;


DATA FILTRO_M02_4;
SET PRUEBA.INCORRECTO_VI_MODEL;
WHERE COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M02_4';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M02_4. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;

DATA FILTRO_M02_5;
SET PRUEBA.INCORRECTO_VI_MODEL;
IF COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M02_5';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M02_5. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;

DATA FILTRO_M02_6;
SET PRUEBA.INCORRECTO_VI_MODEL;
IF COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M02_6';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M02_6. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;



DATA FILTRO_M03;
SET PRUEBA.INCORRECTO_VI_MODEL;
IF COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M03';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M03. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;


DATA FILTRO_M05;
SET PRUEBA.INCORRECTO_VI_MODEL;
IF COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M05';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M05. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;


DATA FILTRO_M04;
SET PRUEBA.INCORRECTO_VI_MODEL;
IF COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M04';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M04. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;


DATA FILTRO_M06_456;
SET PRUEBA.INCORRECTO_VI_MODEL;
IF COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M06_456';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M06_456. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;


DATA FILTRO_M06_123;
SET PRUEBA.INCORRECTO_VI_MODEL;
IF COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M06_123';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M06_123. VALOR_INTEGRAL_SIS VALOR_INTEGRAL_&VIGENCIA.;
RUN;



/*
proc export data=FILTRO_M01_1   outfile="&RUTA.\DIF_M01_1.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M01_2   outfile="&RUTA.\DIF_M01_2.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M01_3   outfile="&RUTA.\DIF_M01_3.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M02_4   outfile="&RUTA.\DIF_M02_4.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M02_5   outfile="&RUTA.\DIF_M02_5.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M02_6   outfile="&RUTA.\DIF_M02_6.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M03   outfile="&RUTA.\DIF_M03_OFI.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M04   outfile="&RUTA.\DIF_M04_COMER.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M05   outfile="&RUTA.\DIF_M05_BODEG.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M06_123   outfile="&RUTA.\DIF_M06_123_BIFAM.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M06_456   outfile="&RUTA.\DIF_M06_456_BIFAM.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
*/


/*-------------------------------------------------------------------------------------------------------------------------------------
											RESUMEN DIFERENCIAS
/*-------------------------------------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------------------------------
											RESUMEN DIFERENCIAS
/*-------------------------------------------------------------------------------------------------------------------------------------*/
PROC SQL;  CREATE TABLE NRO_MODELO AS SELECT  /*CANTIDAD DE PREDIOS BASE PREDIAL URBANA X MODELO*/
LIQUIDACION, NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE. 
/*FROM PRUEBA.PREDIO_VISTA_2020_MODELOS*/
WHERE (((ID_UR_RU IN ('0') OR CODIGO_BARRIO IN &PREDIOS_RURALES.) OR CODIGO_BARRIO IN &PREDIOS_RURALES.) AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY LIQUIDACION, NOMBRE_MODELO_0;
QUIT;


PROC SQL;  CREATE TABLE NRO_MODELO_ACT AS SELECT  /*CANTIDAD DE PREDIOS "ACTUALIZADOS" BASE PREDIAL URBANA X MODELO*/
LIQUIDACION, NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI 
WHERE ((ID_UR_RU IN ('0') OR CODIGO_BARRIO IN &PREDIOS_RURALES.) AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY LIQUIDACION, NOMBRE_MODELO_0;
QUIT;

PROC SQL;	CREATE TABLE RES_PREDIOS_DIFER_MODEL_0  AS
		SELECT A.*, B.N_PREDIOS AS PREDIOS_ACTUALIZADOS
				FROM NRO_MODELO AS A LEFT JOIN NRO_MODELO_ACT AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0;
QUIT;

PROC SQL;  CREATE TABLE NRO_MODELO_COMUN AS SELECT  /*CANTIDAD DE PREDIOS "ACTUALIZADOS" BASE PREDIAL URBANA X MODELO*/
LIQUIDACION, NOMBRE_MODELO_0, COUNT(distinct llave) AS N_PREDIOS
FROM PRUEBA.MODELOSIS_VACIOS 
WHERE ((ID_UR_RU IN ('0') OR CODIGO_BARRIO IN &PREDIOS_RURALES.) /*AND  UNIDAD_LIQUIDACION IN (1)*/)
GROUP BY LIQUIDACION, NOMBRE_MODELO_0;
QUIT;

PROC SQL;	CREATE TABLE RES_PREDIOS_DIFER_MODEL_1  AS
		SELECT A.*, B.N_PREDIOS AS PREDIOS_COMPARADOS_SIS_EST
FROM RES_PREDIOS_DIFER_MODEL_0 AS A LEFT JOIN NRO_MODELO_COMUN AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0;
QUIT;


/* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
PROC SQL; CREATE TABLE NRO_VAR_MODELO_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(DISTINCT LLAVE) AS N_PREDIOS
FROM INCORRECTO_MODELO 
/*WHERE (/*ID_UR_RU IN ('0') AND*/  /*FASE_EST IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL;	CREATE TABLE RES_PREDIOS_DIFER_MODEL  AS
		SELECT A.*, B.N_PREDIOS AS DIFERENCIA_VARIABLE_MODELO
				FROM RES_PREDIOS_DIFER_MODEL_1 AS A LEFT JOIN NRO_VAR_MODELO_DIFERENCIAS AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0;
QUIT;



/*  RESUMEN PREDIOS DIFERENCIAS VALORES TABLA NPH*/
PROC SQL; CREATE TABLE NRO_TABLA_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALORES TABLA NPH*/
NOMBRE_MODELO_0, COUNT(DISTINCT LLAVE) AS N_PREDIOS
FROM INCORRECTO_VR_TABL_NPH 
/*WHERE (/*ID_UR_RU IN ('0') AND*/  /*FASE_EST IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;


PROC SQL; CREATE TABLE NRO_AVES_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALORES TABLA NPH*/
NOMBRE_MODELO_0, COUNT(DISTINCT LLAVE) AS N_PREDIOS
FROM INCORRECTO_AVES
/*WHERE (/*ID_UR_RU IN ('0') AND*/  /*FASE_EST IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;



DATA NRO_TABLA_DIFERENCIAS; SET NRO_TABLA_DIFERENCIAS NRO_AVES_DIFERENCIAS; RUN;

/*  RESUMEN PREDIOS DIFERENCIAS VALOR INTEGRAL PH*/
PROC SQL; CREATE TABLE NRO_VIMODELO_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR INTEGRAL MODELO PH*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM  PRUEBA.INCORRECTO_VI_MODEL
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VI_T23DEPOSPH_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR INTEGRAL T23 DEPOSITO TABLA PH*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM  INCORRECTO_VI_DEPOSITOS
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VI_T21T22PARQPH_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALORE INTEGRAL T21 Y T22 PARQUEADERO PH*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM  INCORRECTO_T21T22_PARQ_VI
GROUP BY NOMBRE_MODELO_0;
QUIT;

DATA TDIFERENCIAS_VI; /*CONSOLIDADO DIFERENCIA VALOR INTEGRAL*/
SET NRO_VIMODELO_DIFERENCIAS NRO_VI_T23DEPOSPH_DIFERENCIAS NRO_VI_T21T22PARQPH_DIFERENCIAS; RUN;


PROC SQL;	CREATE TABLE RESUMEN_PREDIOS_DIF1  AS
		SELECT A.*, B.N_PREDIOS AS DIFERENCIA_VALOR_TABLA
				FROM RES_PREDIOS_DIFER_MODEL AS A LEFT JOIN NRO_TABLA_DIFERENCIAS AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0;
QUIT;

PROC SQL;	CREATE TABLE RESUMEN_PREDIOS_DIF2  AS
		SELECT A.*, B.N_PREDIOS AS DIFERENCIA_VALOR_INTEGRAL
				FROM RESUMEN_PREDIOS_DIF1 AS A LEFT JOIN TDIFERENCIAS_VI  AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0
ORDER BY LIQUIDACION, NOMBRE_MODELO_0;
QUIT;


/*********************************************************************
RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO===>  USOS MULTIPLES
**********************************************************************/

PROC SQL; CREATE TABLE NRO_MODELO_UM AS SELECT
LIQUIDACION, MODELO_USO, COUNT(*) AS N_UNIDADESC
FROM COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE. /*PRUEBA.PREDIO_VISTA_2020_MODELOS*/ 
WHERE ((ID_UR_RU IN ('0') OR CODIGO_BARRIO IN &PREDIOS_RURALES.) AND  NOMBRE_MODELO_0 IN('Usos Múltiples'))
GROUP BY LIQUIDACION, MODELO_USO;
QUIT;

PROC SQL; CREATE TABLE NRO_VAR_MODELO_DIFERENCIAS_UM AS SELECT
MODELO_USO, COUNT(*) AS N_UNIDADESC
FROM INCORRECTO_MODELO
WHERE (NOMBRE_MODELO_0 IN('Usos Múltiples') )
GROUP BY MODELO_USO;
QUIT;

PROC SQL;	CREATE TABLE RES_UNIDADES_DIFERENCIAS_UM  AS
		SELECT A.*, B.N_UNIDADESC AS DIFERENCIA_VAR_MODELO
				FROM NRO_MODELO_UM AS A LEFT JOIN NRO_VAR_MODELO_DIFERENCIAS_UM AS B  
				ON	A.MODELO_USO = B.MODELO_USO;
QUIT;


/*  RESUMEN PREDIOS DIFERENCIAS VALORES TABLA*/
PROC SQL;
CREATE TABLE NRO_TABLA_DIFERENCIAS_UM AS SELECT
MODELO_APLICADO_EST, COUNT(*) AS N_UNIDADESC
FROM INCORRECTO_VR_TABL_NPH 
WHERE (NOMBRE_MODELO_0 IN('Usos Múltiples') )
GROUP BY MODELO_APLICADO_EST;
QUIT;

PROC SQL;	CREATE TABLE RESUMEN_DIFERENCIAS_UM  AS
		SELECT A.*, B.N_UNIDADESC AS DIFERENCIA_VALOR_TABLA
				FROM RES_UNIDADES_DIFERENCIAS_UM  AS A LEFT JOIN NRO_TABLA_DIFERENCIAS_UM AS B  
				ON	A.MODELO_USO = B.MODELO_APLICADO_EST;
QUIT;


/*************************************************************
  TABLA VALORES TERRENO:

  COMPARACIÓN VALORES COMERCIALES Y CATASTRALES A NIVEL PREDIO 
***************************************************************/

PROC SQL; CREATE TABLE PRUEBA.PREDIOS_AVALUO_SIIC AS SELECT * FROM ODBCLIB.VALORES_TERRENO 
WHERE VIGENCIA=&VIGENCIA.;
QUIT; 

DATA PREDIO_FINAL_&FECHA_CORTE.; SET COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE.; IF UNIDAD_LIQUIDACION =1; 
IF VALOR_AVALUO_COM_2022 = . THEN VALOR_AVALUO_COM_2022 = 0;
IF VALOR_M2_CONSTRUCCION_&VIGENCIA. = . THEN VALOR_M2_CONSTRUCCION_&VIGENCIA. = 0;
IF VALOR_M2_TERRENO_COR_22= . THEN VALOR_M2_TERRENO_COR_22= 0;
IF VALOR_AVALUO_CAT = . THEN VALOR_AVALUO_CAT = 0;
IF VALOR_M2_CONSTRUCCION_CAT_2022 = . THEN VALOR_M2_CONSTRUCCION_CAT_2022 = 0;
IF VALOR_M2_TERRENO_CAT_2022 = . THEN VALOR_M2_TERRENO_CAT_2022 = 0;
RUN;

PROC SQL; CREATE TABLE AVALUO_SIS_EST2  AS /* TABLA VALORES_TERRENO*/
		SELECT A.*, B.MODELO_USO, B.NOMBRE_MODELO_0, B.UNIDAD_LIQUIDACION, B.ID_UR_RU
		FROM  PRUEBA.PREDIOS_AVALUO_SIIC AS A LEFT JOIN PREDIO_FINAL_&FECHA_CORTE. AS B
				ON A.CODIGO_BARRIO =B.CODIGO_BARRIO &
				   A.CODIGO_MANZANA=B.CODIGO_MANZANA &
				   A.CODIGO_PREDIO=B.CODIGO_PREDIO &
				   A.CODIGO_CONSTRUCCION=B.CODIGO_CONSTRUCCION &
				   A.CODIGO_RESTO=B.CODIGO_RESTO;
QUIT;


PROC SQL; CREATE TABLE AVALUO_SIS_EST  AS /* TABLA VALORES_TERRENO*/
		SELECT A.CHIP, A.CODIGO_BARRIO,A.CODIGO_MANZANA, A.CODIGO_PREDIO, A.CODIGO_CONSTRUCCION, A.CODIGO_RESTO, A.MODELO_0,
		A.NOMBRE_MODELO_0, A.MODELO_USO, A.UNIDAD_LIQUIDACION, A.ID_UR_RU,
	   
A.VALOR_UNITARIO_&VIGENCIA.,
A.VALOR_UNITARIO_AVESP_2022,
A.VALOR_INTEGRAL_&VIGENCIA., A.PRODUCTO_&VIGENCIA.,

B.AREA_TERR_SIIC, A.AREA_TERRENO,  B.AREA_TERR_TRAN,
B.AREA_CONS_SIIC, A.AREA_CONSTRUIDA, B.AREA_CONS_TRAN,

B.AVLO_TOTL_SIIC, A.VALOR_AVALUO_COM_2022,  B.AVLO_TOTL_TRAN,

CASE /*WHEN ABS((AVLO_TOTL_TRAN/AREA_CONS_TRAN)-(VALOR_AVALUO_COM_2022/AREA_CONSTRUIDA))<5000 THEN 'CORRECTO'*/
	 WHEN (MODELO_0 IN ('M01_1', 'M01_2', 'M01_3', 'M02_4', 'M02_5', 'M02_6', 'M03', 'M04', 'M05', 'M06_123',  'M06_456') AND ABS((AVLO_TOTL_TRAN/AREA_CONS_TRAN)-(VALOR_AVALUO_COM_2022/AREA_CONSTRUIDA))<5000) THEN 'CORRECTO'
	 WHEN (MODELO_0 IN ('M01_1', 'M01_2', 'M01_3', 'M02_4', 'M02_5', 'M02_6', 'M03', 'M04', 'M05', 'M06_123',  'M06_456') AND (ABS(A.VALOR_AVALUO_COM_2022-B.AVLO_TOTL_TRAN)) < 50000) THEN 'CORRECTO' 
     WHEN (MODELO_0 NOT IN ('M01_1', 'M01_2', 'M01_3', 'M02_4', 'M02_5', 'M02_6', 'M03', 'M04', 'M05', 'M06_123',  'M06_456') AND (ABS(A.VALOR_AVALUO_COM_2022-B.AVLO_TOTL_TRAN)) < 50000) THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_AVCOM,

A.VALOR_M2_CONSTRUCCION_&VIGENCIA., B.VALR_CONS_TRAN,
CASE  WHEN (ABS(A.VALOR_M2_CONSTRUCCION_&VIGENCIA.-B.VALR_CONS_TRAN)) < 5000 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_VRM2CONSCOM,

A.VALOR_M2_TERRENO_COR_22, B.VALR_TERR_TRAN,
CASE  WHEN (ABS(A.VALOR_M2_TERRENO_COR_22-B.VALR_TERR_TRAN)) < 1 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_VRM2TERRCOR,

A.VALOR_AVALUO_CAT, B.AVLO_TOTL_PORC, 
CASE  WHEN (ABS(A.VALOR_AVALUO_CAT-B.AVLO_TOTL_PORC)) < 50000 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_AVCAT,
	
A.VALOR_M2_CONSTRUCCION_CAT_2022, B.VALR_CONS_PORC,
CASE  WHEN (ABS(A.VALOR_M2_CONSTRUCCION_CAT_2022-B.VALR_CONS_PORC)) < 5000 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_VRM2CONSCAT,

A.VALOR_M2_TERRENO_CAT_2022, B.VALR_TERR_PORC,
CASE   WHEN (ABS(A.VALOR_M2_TERRENO_CAT_2022-B.VALR_TERR_PORC)) < 1 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_VRM2TERRCAT,

B.FECHA_CORRIDA

			FROM PREDIO_FINAL_&FECHA_CORTE. AS A LEFT JOIN PRUEBA.PREDIOS_AVALUO_SIIC AS B
				ON A.CODIGO_BARRIO =B.CODIGO_BARRIO &
				   A.CODIGO_MANZANA=B.CODIGO_MANZANA &
				   A.CODIGO_PREDIO=B.CODIGO_PREDIO &
				   A.CODIGO_CONSTRUCCION=B.CODIGO_CONSTRUCCION &
				   A.CODIGO_RESTO=B.CODIGO_RESTO;
QUIT; 

PROC SQL; CREATE TABLE NROTOT_PREDIOS_X_MODELO AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM AVALUO_SIS_EST 
WHERE (/*ID_UR_RU IN ('0') AND*/    UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NROTOT_PREDIOS_URB AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS_URB
FROM AVALUO_SIS_EST 
WHERE (ID_UR_RU IN ('0') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_PRED_TAB_TERREN AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_TAB_TERRENO_SIS
FROM AVALUO_SIS_EST2 
/*WHERE (/*ID_UR_RU IN ('0') AND   UNIDAD_LIQUIDACION IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS1 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS AVALUO COMERCIAL*/
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_AVCOM
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_AVCOM IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS2 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR M2 DE LA CONSTRUCCION COMERCIAL*/
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_VRM2CONSCOM
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_VRM2CONSCOM IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS3 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR M2 TERRENO CORREGIDO COMERCIAL */
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_VRM2TERRCOR
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_VRM2TERRCOR IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS4 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS AVALUO CATASTRAL*/
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_AVCAT
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_AVCAT IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS5 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR M2 DE LA CONSTRUCCION CATASTRAL*/
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_VRM2CONSCAT
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_VRM2CONSCAT IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS6 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR M2 TERRENO CATASTRAL */
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_VRM2TERRCAT
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_VRM2TERRCAT IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;





DATA PRUEBA.DIF_TABLA_VALORES_TERRENO;
MERGE NROTOT_PREDIOS_X_MODELO (IN=A0) NROTOT_PREDIOS_URB (IN=A1) NRO_PRED_TAB_TERREN (IN=A2) NRO_VALORESAV_DIFERENCIAS1 (IN=A3) NRO_VALORESAV_DIFERENCIAS2 (IN=A4) NRO_VALORESAV_DIFERENCIAS3 (IN=A5)
NRO_VALORESAV_DIFERENCIAS4 (IN=A6) NRO_VALORESAV_DIFERENCIAS5 (IN=A7) NRO_VALORESAV_DIFERENCIAS6 (IN=A8);
BY NOMBRE_MODELO_0;  RUN;


PROC SQL; CREATE TABLE BASE_DIF_VALORESTERR AS SELECT  /* BASE PREDIOS CON DIFERENCIAS AVALUO COMERCIAL*/
CHIP, CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, MODELO_0, NOMBRE_MODELO_0,  
VALOR_AVALUO_COM_2022, AVLO_TOTL_TRAN, DIF_AVCOM,
VALOR_M2_CONSTRUCCION_&VIGENCIA., VALR_CONS_TRAN, DIF_VRM2CONSCOM, 
VALOR_M2_TERRENO_COR_22, VALR_TERR_TRAN, DIF_VRM2TERRCOR,
VALOR_AVALUO_CAT, AVLO_TOTL_PORC, DIF_AVCAT,
VALOR_M2_CONSTRUCCION_CAT_2022, VALR_CONS_PORC, DIF_VRM2CONSCAT,
VALOR_M2_TERRENO_CAT_2022, VALR_TERR_PORC, DIF_VRM2TERRCAT
FROM AVALUO_SIS_EST
WHERE (DIF_AVCOM IN ('INCORREC') or DIF_VRM2CONSCOM IN ('INCORREC') or DIF_VRM2TERRCOR IN ('INCORREC') or DIF_AVCAT IN ('INCORREC') 
       or DIF_VRM2CONSCAT IN ('INCORREC') or  DIF_VRM2TERRCAT IN ('INCORREC') );
QUIT;
/*
proc export data=BASE_DIF_VALORESTERR outfile='\\prowin02\dospina\SASFILES\Verificacion_Calculos_2020\EXPORT\BASE_DIF_VALORESTERR.txt'   dbms=dlm  replace;  delimiter='|';  
RUN;
*/


PROC SQL; CREATE TABLE NROTOT_PREDIOS_X_MODELO AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM AVALUO_SIS_EST 
WHERE (/*ID_UR_RU IN ('0') AND*/    UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NROTOT_PREDIOS_URB AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS_URB
FROM AVALUO_SIS_EST 
WHERE (ID_UR_RU IN ('0') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_PRED_TAB_TERREN AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_TAB_TERRENO_SIS
FROM AVALUO_SIS_EST2 
/*WHERE (/*ID_UR_RU IN ('0') AND   UNIDAD_LIQUIDACION IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;



PROC EXPORT DATA= RESUMEN_PREDIOS_DIF2 
			outfile= "&RUTA.\output\&FECHA_CORTE._RESUMEN_DIFERENCIAS.xlsx" 
			dbms=xlsx replace;
			sheet="Resumen Diferencia Predios";
			RUN;

PROC EXPORT DATA= RESUMEN_DIFERENCIAS_UM
			outfile= "&RUTA.\output\&FECHA_CORTE._RESUMEN_DIFERENCIAS.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Uso Multiples-UNCal";
			RUN;

/*
PROC EXPORT DATA= PRUEBA.DIF_TABLA_VALORES_TERRENO
			outfile= "&RUTA.\output\&FECHA_CORTE._RESUMEN_DIFERENCIAS_TABLA_VALORES_TERRENO.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Valores Terreno";
			RUN;



PROC EXPORT DATA= BASE_DIF_VALORESTERR  
			outfile= "&RUTA.\output\&FECHA_CORTE._BASE_DIF_VALORESTERR.xlsx" 
			dbms=xlsx replace;
			sheet="Resumen Diferencia";
			RUN;
*/


PROC EXPORT DATA= INCORRECTO_VI_DEPOSITOS
			outfile= "&RUTA.\output\BD_DIFERENCIAS_T23_DEPOS_PH.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Valor Int";
			RUN;


PROC EXPORT DATA= INCORRECTO_VR_TABL_NPH
			outfile= "&RUTA.\output\&FECHA_CORTE._BD_DIFERENCIAS_TABLA_NPH.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Valor tabla NPH";
			RUN;

PROC EXPORT DATA= INCORRECTO_AVES
			outfile= "&RUTA.\output\&FECHA_CORTE._BD_DIFERENCIAS_AVESP.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia AVESP";
			RUN;

PROC EXPORT DATA= INCORRECTO_T21T22_PARQ_VI
			outfile= "&RUTA.\output\&FECHA_CORTE._BD_DIFERENCIAS_T21T22_PARQ_PH.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Valor Int";
			RUN;


PROC EXPORT DATA =FILTRO_M01_1
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M01_1"; 
RUN;

PROC EXPORT DATA =FILTRO_M01_2
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M01_2"; 
RUN;

PROC EXPORT DATA =FILTRO_M01_3
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M01_3"; 
RUN;

PROC EXPORT DATA =FILTRO_M02_4
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M02_4"; 
RUN;

PROC EXPORT DATA =FILTRO_M02_5
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M02_5"; 
RUN;

PROC EXPORT DATA =FILTRO_M02_6
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M02_6"; 
RUN;

PROC EXPORT DATA =FILTRO_M03
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M03"; 
RUN;


PROC EXPORT DATA =FILTRO_M04
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M04"; 
RUN;


PROC EXPORT DATA =FILTRO_M05
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M05"; 
RUN;


PROC EXPORT DATA =FILTRO_M06_123
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M06_123"; 
RUN;


PROC EXPORT DATA =FILTRO_M06_456
OUTFILE = "&RUTA.\output\&FECHA_CORTE._REVISION_DIFERENCIAS_MODELOS.xlsx" 
DBMS = XLSX REPLACE;
SHEET = "FILTRO_M06_456"; 
RUN;


DATA PREDIO_Y_UM;
SET COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE.;
IF UNIDAD_LIQUIDACION = 1;
LLAVE = CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO);
RUN;

PROC SQL;
CREATE TABLE PREDIOS_NO_REPROCESAR AS SELECT DISTINCT CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, CHIP 
FROM PREDIO_Y_UM 
WHERE (LLAVE IN
SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM COMPARA_MODSISTEMAS_UR) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M01_1) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M01_2) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M01_3) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M02_4) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M02_5) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M02_6) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M03) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M04) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M05) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M06_123) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM FILTRO_M06_456) AND 
(LLAVE NOT IN SELECT DISTINCT  CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM INCORRECTO_AVES) AND 
(LLAVE NOT IN SELECT DISTINCT CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM INCORRECTO_T21T22_PARQ_VI) AND 
(LLAVE NOT IN SELECT DISTINCT CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM INCORRECTO_VR_TABL_NPH) AND 
(LLAVE NOT IN SELECT DISTINCT CAT(CODIGO_BARRIO,CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO) AS LLAVE FROM INCORRECTO_VI_DEPOSITOS);
QUIT;


PROC EXPORT DATA=PREDIOS_NO_REPROCESAR
OUTFILE= "&RUTA.\output\&FECHA_CORTE._PREDIOS_NO_REPROCESAR.CSV" 
DBMS=CSV REPLACE;
RUN;