/*---------------------------------------------------------------------------------------------

COMPARACION SISTEMAS

---------------------------------------------------------------------------------------------**/

%let _timer_start = %sysfunc(datetime());
%LET RUTA = \\prowin04\cavellaneda\EJERCICIOS\EJERCICIOS 2021\VERIFICACION_CALCULOS\COMPARACION_SISTEMAS;
LIBNAME PRUEBA "\\prowin04\cavellaneda\EJERCICIOS\EJERCICIOS 2021\VERIFICACION_CALCULOS\COMPARACION_SISTEMAS";

%LET FECHA_CORTE = 211119;
%LET VIGENCIA = 2022;
%LET VIGENCIA_2 = 22;
%LET YEAR = &VIGENCIA. - 1;
%LET VIGENCIA_ANT = %sysevalf(&VIGENCIA.-1);
%LET VIGENCIA_ANT_2 = %sysevalf(&VIGENCIA_2.-1);
%LET VIGENCIA_ANT_ANT = %sysevalf(&VIGENCIA.-2);
%LET VIGENCIA_ANT_ANT_2 = %sysevalf(&VIGENCIA_2.-2);


proc import datafile = "&RUTA.\input\211104_REPORTE_FINAL_M01_1.xlsx"
 out  =  VARS_M01_1
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M01_1 separated by ' '
    from VARS_M01_1;
quit;



proc import datafile = "&RUTA.\input\211105_REPORTE_FINAL_M01_2.xlsx"
 out  =  VARS_M01_2
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M01_2 separated by ' '
    from VARS_M01_2;
quit;




proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M01_3.xlsx"
 out  =  VARS_M01_3
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M01_3 separated by ' '
    from VARS_M01_3;
quit;




proc import datafile = "&RUTA.\input\211101_REPORTE_FINAL_M02_4.xlsx"
 out  =  VARS_M02_4
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M02_4 separated by ' '
    from VARS_M02_4;
quit;


proc import datafile = "&RUTA.\input\211026_REPORTE_FINAL_M02_5.xlsx"
 out  =  VARS_M02_5
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M02_5 separated by ' '
    from VARS_M02_5;
quit;


proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M02_6.xlsx"
 out  =  VARS_M02_6
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M02_6 separated by ' '
    from VARS_M02_6;
quit;


proc import datafile = "&RUTA.\input\211101_REPORTE_FINAL_M03.xlsx"
 out  =  VARS_M03
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M03 separated by ' '
    from VARS_M03;
quit;



proc import datafile = "&RUTA.\input\211104_REPORTE_FINAL_M04.xlsx"
 out  =  VARS_M04
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M04 separated by ' '
    from VARS_M04;
quit;



proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M05.xlsx"
 out  =  VARS_M05
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M05 separated by ' '
    from VARS_M05;
quit;



proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M06_123.xlsx"
 out  =  VARS_M06_123
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M06_123 separated by ' '
    from VARS_M06_123;
quit;


proc import datafile = "&RUTA.\input\211102_REPORTE_FINAL_M06_456.xlsx"
 out  =  VARS_M06_456
 dbms  =  xlsx
 replace;
 sheet  =  "Diccionario";
/*namerow=7;
datarow=8;*/
range='A7:';
getnames=YES;
run;


proc sql;
  select VARIABLES
    into :VARIABLE_M06_456 separated by ' '
    from VARS_M06_456;
quit;


DATA PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI; /*SET COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE.;*/
 SET COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE.; /*PRUEBA.PREDIO_VISTA_2020_MODELOS;*/
IF ACTUALIZADO=1; 
IF CODIGO_USO=' ' THEN CODIGO_USO='000'; ELSE CODIGO_USO=CODIGO_USO;
RUN; 

/******************************************
PREDIOS SIN VALOR MODELO O TABLA
*******************************************/

/*PROC SQL;    CREATE TABLE FILTRO_SIN_VI_MODEL AS 
   SELECT *
   FROM PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI
WHERE (VALOR_INTEGRAL_&VIGENCIA. = . AND LIQUIDACION = 'MODEL');
QUIT;

PROC SQL;    CREATE TABLE FILTRO_SIN_VALOR_TABLA AS 
   SELECT *
   FROM PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI
WHERE (VALOR_UNITARIO_&VIGENCIA. = . AND LIQUIDACION = 'TABLA' & MODELO_USO NOT IN ('T21','T22'));
QUIT;

PROC SQL;    CREATE TABLE FILTRO_SIN_VALOR_TABLAPARQ AS 
   SELECT *
   FROM PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI
WHERE (PRODUCTO_&VIGENCIA. = . AND LIQUIDACION = 'TABLA' & MODELO_USO  IN ('T21','T22'));
QUIT;
													/*FIN*/


PROC SQL;
CREATE TABLE COMPARA_MODSISTEMAS AS SELECT *
FROM ODBCLIB.VALORES_CONSTRUCCION
WHERE MODELO_APLICADO NOT IN ('000', '') AND VIGENCIA = 2022;
QUIT;


PROC SQL;
CREATE TABLE REVISA_T21 AS SELECT *
FROM  ODBCLIB.VALORES_CONSTRUCCION
WHERE MODELO_APLICADO IN ('T21', 'T22') AND VIGENCIA = 2022;
QUIT;


DATA COMPARA_MODSISTEMAS_UR;
SET COMPARA_MODSISTEMAS;
IF SUBSTR(CODIGO_BARRIO,1,1) = '0' OR CODIGO_BARRIO IN ('208125',
'208126',
'208107',
'201109',
'201110',
'201302',
'201304',
'201309',
'201317',
'201408',
'201502',
'201503',
'202204',
'202309',
'202404',
'202410',
'202506',
'202511',
'202601',
'204104',
'204106',
'204129',
'204131',
'204304',
'205101',
'205109',
'205308',
'205316',
'205318',
'205319',
'205320',
'205322',
'205401',
'205402',
'208101',
'208104',
'208108',
'208110',
'208127',
'208128',
'208129',
'208203',
'201404',
'201508',
'202203',
'202502',
'204107',
'205102',
'208103',
'208111');
LLAVE = COMPRESS(CODIGO_BARRIO || CODIGO_MANZANA || CODIGO_PREDIO || CODIGO_CONSTRUCCION || CODIGO_RESTO);
AREA_USO = ROUND(AREA_USO,.01);
VETUSTEZ_SIS = VETUSTEZ;
IF (2022 - VETUSTEZ = 0) THEN EDAD_SIS = 1; ELSE EDAD_SIS = (2022-VETUSTEZ);
PUNTAJE_SIS = PUNTAJE;
ESTRATO_SIS = ESTRATO;
VLR_M2_CONSTRUCCION_SIS = VLR_M2_CONSTRUCCION;
FASE_SIS = FASE;
CODIGO_DESTINO_SIS = CODIGO_DESTINO;
VALOR_INTEGRAL_SIS = VALOR_INTEGRAL;
IF MODELO_APLICADO='AVAES' THEN MODELO_APLICADO_SIS='AVESP     '; ELSE MODELO_APLICADO_SIS=PUT(MODELO_APLICADO, $10.); 
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CLASE_CONSTRUCCION UNIDAD_CALIFICADA CODIGO_USO AREA_USO LLAVE
VETUSTEZ EDAD_SIS PUNTAJE_SIS CODIGO_DESTINO_SIS ESTRATO_SIS VLR_M2_CONSTRUCCION_SIS VALOR_INTEGRAL_SIS FASE_SIS MODELO_APLICADO_SIS;
RUN;


/*INTERSECCION A NIVEL UNIDAD*/
proc sort data=PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI;
by  CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION ;RUN;
proc sort data=COMPARA_MODSISTEMAS_UR;
by  CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION ;RUN;

DATA INTER_SISTEMAS_ESTADISTICA_0; /*BASE A COMPARAR PREDIOS MAS USO MULTIPLE*/
merge PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI (in=en_uno) COMPARA_MODSISTEMAS_UR (in=en_dos);
by CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION
;if en_dos and en_uno; RUN;


/*LO QUE ESTA EN SISTEMAS Y NO EN ESTADISTICA o viceversa*/

/*DATA SIST_COMPLEMENTO; /*LO QUE ESTA EN ESTADISTICA y no en SISTEMAS == DEBERIAN SER LOTES*/
/*merge PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI (in=en_uno) PRUEBA.COMPARA_MODSISTEMAS_UR (in=en_dos);
by CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION
;if en_uno and not en_dos; RUN;

DATA EST_COMPLEMENTO; 
merge PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI (in=en_uno) PRUEBA.COMPARA_MODSISTEMAS_UR (in=en_dos);
by CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO CODIGO_USO UNIDAD_CALIFICADA AREA_USO CLASE_CONSTRUCCION
;if en_dos and not en_uno; RUN;*/

/*DATA PROVISIONAL; SET INTER_SISTEMAS_ESTADISTICA_0;
IF MODELO_0 IN ('T23') THEN VALOR_INTEGRAL_&VIGENCIA.=VALOR_UNITARIO_&VIGENCIA.; 
IF (MODELO_0 IN ('T21','T22')) THEN VALOR_INTEGRAL_&VIGENCIA. = PRODUCTO_&VIGENCIA./AREA_CONSTRUIDA;
RUN;*/

DATA PRUEBA.MODELOSIS_VACIOS; SET /*PROVISIONAL*/INTER_SISTEMAS_ESTADISTICA_0;
IF MODELO_APLICADO_SIS = MODELO_USO THEN COMPARA_MODELO = "CORRECTO"; 
IF MODELO_APLICADO_SIS NE MODELO_USO THEN COMPARA_MODELO = "INCORREC"; 
IF FASE_SIS = UNIDAD_LIQUIDACION THEN COMPARA_FASE = "CORRECTO"; 
IF FASE_SIS NE UNIDAD_LIQUIDACION THEN COMPARA_FASE = "INCORREC"; 
IF SUBSTR(CODIGO_BARRIO,1,1) = '0' THEN URBANO_RURAL = 'URBANO'; ELSE URBANO_RURAL = 'RURAL';

IF ABS(VALOR_UNITARIO_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) <= 1 THEN COMPARA_VLRCONS_M2 = "CORRECTO";  /*tabla: valor m2 y T23 */
IF ABS(VALOR_UNITARIO_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) > 1 THEN COMPARA_VLRCONS_M2 = "INCORREC";

IF ABS(VALOR_M2_CONSTRUCCION_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) <= 5000 THEN COMPARA_AVALUOCOM = "CORRECTO";  /*(1)tabla: t21 y t22 parquederos */
IF ABS(VALOR_M2_CONSTRUCCION_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) > 5000 THEN COMPARA_AVALUOCOM = "INCORREC"; 

IF ABS(VALOR_INTEGRAL_&VIGENCIA. - VALOR_INTEGRAL_SIS) <= 5000 THEN COMPARA_VAL_INT = "CORRECTO"; /*T23 DEPOSITOS Y MODELOS*/
IF ABS(VALOR_INTEGRAL_&VIGENCIA. - VALOR_INTEGRAL_SIS) > 5000 THEN COMPARA_VAL_INT = "INCORREC";

IF ABS(VALOR_M2_CONSTRUCCION_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) <= 1 THEN COMPARA_VLRCONS = "CORRECTO";  /*valor m2 *area construcción*/ 
IF ABS(VALOR_M2_CONSTRUCCION_&VIGENCIA. - VLR_M2_CONSTRUCCION_SIS) > 1 THEN COMPARA_VLRCONS = "INCORREC";

IF MODELO_USO = 	'AV_ESP_BIC'	AND 	MODELO_APLICADO_SIS =	'AVBIC'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'AV_ESP_CC'	    AND 	MODELO_APLICADO_SIS =	'AVECC'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'AV_ESP_USO'	AND 	MODELO_APLICADO_SIS =	'AVUSO'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'LOTES_NPH'	    AND 	MODELO_APLICADO_SIS =	'LTNPH'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'LOTES_PH'	    AND 	MODELO_APLICADO_SIS =	'LTPH'   THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'M06_123'	    AND 	MODELO_APLICADO_SIS =	'M06_1'  THEN COMPARA_MODELO = "CORRECTO";
IF MODELO_USO = 	'M06_456'	    AND 	MODELO_APLICADO_SIS =	'M06_4'  THEN COMPARA_MODELO = "CORRECTO";

RUN;




/***************************
1. DIFERENCIAS VARIABLE MODELO
****************************/

PROC SQL; CREATE TABLE INCORRECTO_MODELO AS SELECT  /*DIFERENCIAS VARIABLE MODELO*/
CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, UNIDAD_CALIFICADA, CLASE_CONSTRUCCION, LLAVE,	
CODIGO_DESTINO,	CLASE_PREDIO,	CODIGO_ESTRATO,	CONSERVACION_HISTORICA,		EDAD,	PUNTAJE,		
/*MARCA_MANZANA,*/		NUMERO_UNIDADES,	NUM_USOS,	ARMAZON_ESTRUCTURA,	MUROS_ESTRUCTURA, AREA_TERRENO,	AREA_CONSTRUIDA,	AREA_USO,	
CODIGO_USO,	CODIGO_USOP,  PREDIO_UNIDCAL_COMPL, /*UM_MODELO_PH, UM_MODELO_AVES, */MARCA_MANZANA, NOMBRE_MODELO_0,	MODELO_USO,	MODELO_APLICADO_SIS, FASE_SIS,	UNIDAD_LIQUIDACION AS FASE_EST,	
COMPARA_MODELO/*,	COMPARA_FASE*/  
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_MODELO='INCORREC'; QUIT;



PROC EXPORT DATA= INCORRECTO_MODELO
			outfile= "&RUTA.\output\&FECHA_CORTE._BD_DIFERENCIAS_VARIABLE_MODELO.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Variable Modelo";
			RUN;



/***************************
4. DIFERENCIAS TABLAS NPH 
****************************/

PROC SQL; CREATE TABLE INCORRECTO_VR_TABL_NPH AS SELECT  /*DIFERENCIAS VALORS TABLAS NPH*/
CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, UNIDAD_CALIFICADA, CLASE_CONSTRUCCION, LLAVE,	
ARMAZON_ESTRUCTURA,	MUROS_ESTRUCTURA, LIQUIDACION,	NOMBRE_MODELO_0,	 /*AVALUO_ESP,*/	 FASE_SIS,	UNIDAD_LIQUIDACION as FASE_EST, CODIGO_DESTINO, CODIGO_DESTINO_SIS,	CLASE_PREDIO, 
CONSERVACION_HISTORICA, NUMERO_UNIDADES,	NUM_USOS, CODIGO_USO,	CODIGO_USOP, EC_MO_ID, MODELO_USO AS MODELO_APLICADO_EST,	MODELO_APLICADO_SIS,	CODIGO_ESTRATO, ESTRATO_SIS,	EDAD, EDAD_SIS,	PUNTAJE, PUNTAJE_SIS,		
MARCA_MANZANA,	 AREA_TERRENO,	AREA_CONSTRUIDA,	AREA_USO,	
VLR_M2_CONSTRUCCION_SIS, VALOR_M2_CONSTRUCCION_&VIGENCIA., VALOR_UNITARIO_&VIGENCIA., NOMBRE_MODELO_0, 
/*VALOR_CONSTRUCCION_COM_2020_UM, VALOR_AVALUO_COM_2020, */
COMPARA_MODELO, COMPARA_VLRCONS_M2
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VLRCONS_M2='INCORREC'& LIQUIDACION IN ('TABLA') & MODELO_USO NOT IN ('T21','T22','T23'); QUIT;

PROC SQL; CREATE TABLE INCORRECTO_AVES AS SELECT
CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, UNIDAD_CALIFICADA, LLAVE,
FASE_SIS,	UNIDAD_LIQUIDACION as FASE_EST,
NUMERO_UNIDADES,	NUM_USOS, CODIGO_USO,	CODIGO_USOP,  LIQUIDACION, ORIGEN, NOMBRE_MODELO_0, MODELO_USO AS MODELO_APLICADO_EST,	MODELO_APLICADO_SIS,
VLR_M2_CONSTRUCCION_SIS, VALOR_M2_CONSTRUCCION_&VIGENCIA., VALOR_UNITARIO_UC_AVES, 
COMPARA_MODELO, COMPARA_VLRCONS
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VLRCONS='INCORREC'& LIQUIDACION IN ('AVESP')
ORDER BY CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO
; QUIT;


PROC EXPORT DATA= INCORRECTO_VR_TABL_NPH
			outfile= "&RUTA.\output\BD_DIFERENCIAS_TABLA_NPH.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Valor tabla NPH";
			RUN;

PROC EXPORT DATA= INCORRECTO_AVES
			outfile= "&RUTA.\output\BD_DIFERENCIAS_AVESP.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia AVESP";
			RUN;


PROC SQL; CREATE TABLE INCORRECTO_T21T22_PARQ_VI AS SELECT /*DIFERENCIAS VALOR INTEGRAL PH T21 Y T22*/
CHIP, CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, UNIDAD_CALIFICADA, CLASE_CONSTRUCCION, CLASE_PREDIO, LLAVE,	
CODIGO_DESTINO, CODIGO_DESTINO_SIS,			AREA_USO,	CODIGO_USO, NUM_USOS, NUMERO_UNIDADES,	CODIGO_USOP, ZHF_2020,	NOMBRE_MODELO_0,	MODELO_USO AS MODELO_APLICADO_EST,	MODELO_APLICADO_SIS, 	
FASE_SIS,	UNIDAD_LIQUIDACION  as FASE_EST,	CODIGO_ESTRATO, ESTRATO_SIS,	AREA_CONSTRUIDA, VLR_M2_CONSTRUCCION_SIS, PRODUCTO_&VIGENCIA., /*VALOR_AVALUO_COM_2019,*/ VALOR_INTEGRAL_&VIGENCIA., VALOR_INTEGRAL_SIS, 
COMPARA_VAL_INT
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VAL_INT='INCORREC' & MODELO_USO IN ('T21','T22') ; QUIT;


PROC EXPORT DATA= INCORRECTO_T21T22_PARQ_VI
			outfile= "&RUTA.\output\BD_DIFERENCIAS_T21T22_PARQ_PH.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Valor Int";
			RUN;



PROC SQL; CREATE TABLE INCORRECTO_T21T22_PARQ_VI2 AS SELECT /*DIFERENCIAS VALOR INTEGRAL PH T21 Y T22*/
CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0, 	
AREA_USO,	CODIGO_ESTRATO, AREA_CONSTRUIDA,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2019*/
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VAL_INT='INCORREC' & MODELO_USO IN ('T21','T22') ; QUIT;

proc export data=INCORRECTO_T21T22_PARQ_VI2   outfile='&RUTA.\DIF_T21T22_PARQ_VI.txt'   dbms=dlm  replace;  delimiter='|';  RUN;


/*****************************************************************************

			7. DIFERENCIAS VALOR INTEGRAL - MODELOS Y T23 

*********************************************************************************/


/*T23 Depósito (Lockers) PH*/

PROC SQL; CREATE TABLE INCORRECTO_VI_DEPOSITOS AS SELECT
CODIGO_LOCALIDAD,	NOMBRE_BARRIO,	CODIGO_BARRIO,	CODIGO_MANZANA,	CODIGO_PREDIO,	CODIGO_CONSTRUCCION,	CODIGO_RESTO, LLAVE, CODIGO_USO,	CODIGO_USOP,	
NOMBRE_MODELO_0,	MODELO_USO AS MODELO_APLICADO_EST, MODELO_APLICADO_SIS,	 FASE_SIS, UNIDAD_LIQUIDACION as FASE_EST,  CODIGO_ESTRATO, ESTRATO_SIS, AREA_CONSTRUIDA,
VLR_M2_CONSTRUCCION_SIS,  VALOR_UNITARIO_&VIGENCIA., /*VALOR_M2_CONSTRUCCION_&VIGENCIA., VALOR_AVALUO_COM_2019,*/ 
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA., COMPARA_VAL_INT
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VAL_INT='INCORREC'& MODELO_USO IN ('T23'); QUIT;

PROC SQL; CREATE TABLE INCORRECTO_VI_DEPOSITOS2 AS SELECT /*DIFERENCIAS VALOR INTEGRAL PH T21 Y T22*/
CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0, 	
AREA_USO,	CODIGO_ESTRATO, AREA_CONSTRUIDA,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2019*/
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VAL_INT='INCORREC' & MODELO_USO IN ('T23') ; QUIT;

proc export data=INCORRECTO_VI_DEPOSITOS2   outfile='&RUTA.\DIF_T23_DEPOSITOSPH_VI.txt'   dbms=dlm  replace;  delimiter='|';  RUN;


PROC EXPORT DATA= INCORRECTO_VI_DEPOSITOS
			outfile= "&RUTA.\BD_DIFERENCIAS_T23_DEPOS_PH.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Valor Int";
			RUN;

/******************************************
7. DIFERENCIAS VALOR INTEGRAL - MODELOS
*******************************************/


PROC SQL; CREATE TABLE PRUEBA.INCORRECTO_VI_MODEL AS SELECT *
FROM PRUEBA.MODELOSIS_VACIOS
WHERE COMPARA_VAL_INT='INCORREC'& LIQUIDACION IN ('MODEL'); QUIT;

%PUT &VARIABLE_M01_1.;

DATA FILTRO_M01_1;
SET PRUEBA.INCORRECTO_VI_MODEL;
WHERE COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M01_1';
KEEP CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO UNIDAD_CALIFICADA CODIGO_USO MODELO_0 &VARIABLE_M01_1;
RUN;


PROC SQL;    CREATE TABLE FILTRO_M01_2 AS 
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
AREA_CONSTRUIDA,
EDAD,
DUMMY_CRUCBER,
DUMMY_CONCORDIA,
DUMMY_TINTAL,
DUMMY_EGIPTOAGUAS,
COORDENADA_X,
COORDENADA_Y,
COL_PRIV,
PKBOLSIL,
URI_UPJ,
ZMPA_M_100,
CENTCOMERC_100_200,
CENTCOMERC_200_500,
IN_MIL_POL,
PKZONAL,
ESTACTM_200_500,
EST03,
TUNJUELITO,
BOSA,
KENNEDY,
MARTIRES,
Tip4,
GA3,
GB1,
GB2,
ZHF_4_TRAT_CONSERV,
ZHF_4_TRAT_MEJ,
ZHF_10_EST_VIA_REG,
ZHF_11_INF_VIA_LOCAL,
ZHF_1213_13,
ZHF_1213_17,
ZHF_1213_32,
SUBA,
C_BOLIVAR,
SANTAFE,
SAN_CRISTOBAL,
USME,
FONTIBON,
ENGATIVA,
CANDELARIA,
RAFAEL_U_U,
PUNTAJE,
NUMERO_UNIDADES_BMP,
DUMMY_SUB_2020_M01_2,
DUMMY_SOB_2020_M01_2,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA.
FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M01_2');
QUIT;


PROC SQL;    CREATE TABLE FILTRO_M01_3 AS /*M01_3 - DIFERENCIAS*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
USO_037,
PUNTAJE,
EDAD,
COORDENADA_X,
DENSIDAD,
RELACION_AREA,
EST05,
EST04,
RFREGION,
AREA_CONSTRUIDA,
NUMERO_UNIDADES_RES_BMP,
EST02,
COL_PUB,
EST01,
TEUSAQUILLO,
AREA_ACT5,
SANTAFE,
PKVENCIN,
CHAPINERO,
TUNJUELITO,
ENGATIVA,
CANDELARIA,
C_BOLIVAR,
ZHF_1213_23,
ZHF_4_TRAT_CONSOL,
ZHF_4_TRAT_DESARR,
ZHF_4_TRAT_CONSERV,
ZHF_6_TOPOG_INCL,
ZHF_6_TOPOG_PLANA,
ZHF_11_INF_VIA_ZO_INT,
ZHF_11_INF_VIA_ART_COM,
MARTIRES,
SUBA,
ZHF_10_EST_VIA_REG,
ZHF_1213_14,
ZHF_1213_17,
B_UNIDOS,
A_NARINO,
P_ARANDA,
RAFAEL_U_U,
ZHF_1213_13,
SAN_CRISTOBAL,
KENNEDY,
AREA_ACT2,
DUMMY_SOB_2020_M01_3,
DUMMY_SUB_2020_M01_3,
PUNTAJE,
EDAD,
RELACION_AREA,
AREA_CONSTRUIDA,
P_ARANDA,
ZHF_10_EST_VIA_REG,
TEUSAQUILLO,
ZHF_1213_14,
SANTAFE,
ZHF_4_TRAT_CONSERV,
ZHF_6_TOPOG_INCL,
ZHF_11_INF_VIA_ART_COM,
TUNJUELITO,
KENNEDY,
ZHF_1213_13,
ZHF_11_INF_VIA_ZO_INT,
ZHF_4_TRAT_CONSOL,
MARTIRES,
ZHF_1213_17,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2020*/
FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M01_3');
QUIT;




PROC SQL;    CREATE TABLE FILTRO_M02_4 AS /*M02_4 - DIFERENCIAS*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
COORDENADA_Y,
EDAD,
PUNTAJE,
EST05,
IN_MIL_POL,
CLINIC123_M_500,
RELACION_AREA,
EST06,
DENSIDAD,
EST01,
RFNAL,
CAI,
AREA_CONSTRUIDA,
GA4,
USO_037,
CONSERVACION_N,
COL_PUB,
CLINIC123_100_200,
CENTCOMERC_200_500,
ZMPA_0_50,
ZMPA_50_100,
ZHF_1213_13,
ZHF_1213_14,
ZHF_1213_15,
CHAPINERO,
FONTIBON,
TEUSAQUILLO,
AREA_ACT6,
ENGATIVA,
B_UNIDOS,
KENNEDY,
SANTAFE,
SUBA,
USAQUEN,
P_ARANDA,
DUMMY_SOB_2020_M02_4,
DUMMY_SUB_2020_M02_4,
EDAD,
RELACION_AREA,
DENSIDAD,
AREA_CONSTRUIDA,
ZHF_1213_15,
ZHF_1213_14,
AREA_ACT6,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2020*/
FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M02_4');
QUIT;


PROC SQL;    CREATE TABLE FILTRO_M02_5 AS /*M02_5 - DIFERENCIAS*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
VALOR_REFERENCIA_2020,
EDAD,
PKVENCIN,
COORDENADA_Y,
EST06,
COORDENADA_X,
ZHF_1213_16,
PKZONAL,
PKMETROP,
CENTCOMERC_200_500,
EST03,
GB4,
COL_PRIV,
USO_037,
CONSERVACION_N,
CONSERVACION_I,
PISO_4_5,
PISO_11_20,
PISO_6_10,
UNIVERS,
CENTCOMERC_M_500,
ZHF_1213_14,
ZHF_1213_15,
ZHF_1213_18,
ZHF_1213_21,
ZHF_1213_23,
ZHF_4_TRAT_MEJ,
ZHF_11_INF_VIA_ART_BAS,
AREA_ACT4,
GB2,
GB3,
GC4,
TEUSAQUILLO,
USAQUEN,
B_UNIDOS,
SUBA,
PUNTAJE,
AREA_CONSTRUIDA,
DUMMY_SOB_2020_M02_5,
DUMMY_SUB_2020_M02_5,
RELACION_AREA,
FONTIBON,
VALOR_REFERENCIA_2020,
EDAD,
B_UNIDOS,
PUNTAJE,
TEUSAQUILLO,
SUBA,
ZHF_1213_16,
ZHF_1213_21,
ZHF_1213_14,
ZHF_1213_15,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2020*/
FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M02_5');
QUIT;



PROC SQL;    CREATE TABLE FILTRO_M02_6 AS /*M02_6 - DIFERENCIAS*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
COORDENADA_Y,
EDAD,
RFNAL,
USAQUEN,
PUNTAJE,
PKZONAL,
COL_PRIV,
IN_MIL_POL,
PKBOLSIL,
GC3,
ZHF_6_TOPOG_PLANA,
NUMERO_UNIDADES_RES_BMP,
RELACION_AREA,
COL_PUB,
USO_037,
DENSIDAD,
CAI,
EST01,
UNIVERS,
CLINIC123_100_200,
CLINIC123_200_500,
ZHF_1213_15,
DUMMY_SUB_2020_M02_6,
DUMMY_SOB_2020_M02_6,
ZHF_1213_16,
CHAPINERO,
AREA_CONSTRUIDA,
EDAD,
PUNTAJE,
RELACION_AREA,
USAQUEN,
CHAPINERO,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2020*/
FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M02_6');
QUIT;



PROC SQL;    CREATE TABLE FILTRO_M03 AS /*M03 - DIFERENCIAS*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
DUMMY_ESPNORTE,
EST05,
PUNTAJE,
PKZONAL,
EDAD,
NUMERO_UNIDADES_BMP,
VALOR_REFERENCIA_2020,
COL_PUB,
ESTACTM_M_500,
USO_081,
CENT_CHAPINERO,
CENT_SALITRE_Z_IND,
CONSERVACION_M,
ZHF_4_TRAT_RENOV,
ZHF_4_TRAT_CONSERV,
ZHF_10_EST_VIA_BUENO,
ZHF_11_INF_VIA_ZO_INT,
ZHF_1213_21,
ZHF_1213_44,
USAQUEN,
CHAPINERO,
SUBA,
TEUSAQUILLO,
CLINIC123_0_100,
CENTCOMERC_0_100,
ESTACTM_0_100,
AREA_CONSTRUIDA,
PKMETROP,
PKVENCIN,
SANTAFE,
ZHF_11_INF_VIA_ART_COM,
B_UNIDOS,
DUMMY_SUB_2020_M03,
DUMMY_SOB_2020_M03,
RELACION_AREA,
A_NARINO,
CANDELARIA,
P_ARANDA,
ZHF_1213_14,
ZHF_1213_13,
CENT_USAQUEN_H_STA_BARB,
PUNTAJE,
EDAD,
SANTAFE,
SUBA,
AREA_CONSTRUIDA,
CHAPINERO,
ZHF_1213_21,
ZHF_11_INF_VIA_ART_COM, 
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2020*/
FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M03');
QUIT;



PROC SQL;    CREATE TABLE FILTRO_M04 AS /*M04 - DIFERENCIAS*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
NUMERO_PISO_01	,
NUMERO_PISO_02	,
VALOR_REFERENCIA_2020	,
COL_PUB	,
PUNTAJE	,
COL_PRIV	,
IN_MIL_POL	,
ZHF_1213_24	,
CHAPINERO	,
EST02	,
USAQUEN	,
EST04	,
ZHF_1213_23	,
CENT_USAQUEN_H_STA_BARB	,
ZHF_1213_15	,
SAN_CRISTOBAL	,
USME	,
TUNJUELITO	,
BOSA	,
FONTIBON	,
TEUSAQUILLO	,
MARTIRES	,
A_NARINO	,
CANDELARIA	,
RAFAEL_U_U	,
ZHF_1213_21	,
ZHF_1213_22	,
ZHF_4_TRAT_CONSOL	,
ZHF_4_TRAT_RENOV	,
ZHF_4_TRAT_CONSERV	,
ZHF_4_TRAT_MEJ	,
ZHF_6_TOPOG_PLANA	,
ZHF_6_TOPOG_INCL	,
ZHF_11_INF_VIA_LOCAL	,
ZHF_11_INF_VIA_ZO_INT	,
ZHF_11_INF_VIA_ART_COM	,
AREA_ACT5	,
AREA_ACT6	,
CENT_CENTRO_H_INT	,
CENT_DELICIAS_ENS	,
CENT_RESTREPO_SANT	,
CENT_SIETE_AGOSTO	,
CENT_SUBA	,
CENT_TOBERIN_LA_PAZ	,
CENT_VEINTE_JULIO	,
CENTCOMERC_0_100	,
RELACION_AREA	,
AREA_CONSTRUIDA	,
EDAD	,
NUMERO_UNIDADES_BMP	,
PKVENCIN	,
USO_040	,
KENNEDY	,
B_UNIDOS	,
P_ARANDA	,
SANTAFE	,
ZHF_10_EST_VIA_REG	,
ZHF_1213_12	,
SUBA	,
ENGATIVA	,
ZHF_1213_14	,
ZHF_1213_13	,
DUMMY_SOB_2020_M04	,
DUMMY_SUB_2020_M04	,
VALOR_REFERENCIA_2020,
USAQUEN,
A_NARINO,
TEUSAQUILLO,
EDAD,
FONTIBON,
CHAPINERO,
ZHF_1213_23,
ZHF_11_INF_VIA_ZO_INT,
ZHF_4_TRAT_MEJ,
ZHF_1213_12,
SUBA,
PUNTAJE,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2020*/
FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M04');
QUIT;




PROC SQL;    CREATE TABLE FILTRO_M05 AS /*M05 - DIFERENCIAS*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
VALOR_REFERENCIA_2020,
AREA_CONSTRUIDA,
COORDENADA_Y,
USO_091,
USAQUEN,
SUBA,
SANTAFE,
SAN_CRISTOBAL,
RAFAEL_U_U,
P_ARANDA,
MARTIRES,
KENNEDY,
FONTIBON,
ENGATIVA,
BOSA,
B_UNIDOS,
CENT_CLL_72_CLL_100,
CENT_SUBA,
CENT_RESTREPO_SANT,
ZHF_1213_33,
ARMAZON_FERROCONCRETO,
CERCHA_LIVIANA,
CERCHA_MEDIANA,
DUMMY_STABARBAR,
DUMMY_SALITHAYU,
AREA_TERRENO,
PUNTAJE,
USME,
DUMMY_SOB_2020_M05,
DUMMY_SUB_2020_M05,
COMPLEMENTO_INDUSTRIA,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2020*/

FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M05');
QUIT;




PROC SQL;    CREATE TABLE FILTRO_M06_123 AS /*M06_123 - DIFERENCIAS*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
ESTRATO2,
ESTRATO3,
COORDENADA_Y,
COORDENADA_X,
EDAD,
RELACION_AREA,
AREA_CONSTRUIDA,
IN_MIL_POL,
EST04,
EST05,
PKBOLSIL,
PORTALTM_200_500,
ESTACTM_200_500,
VALOR_REFERENCIA_2020,
SAN_CRISTOBAL,
TUNJUELITO,
BOSA,
KENNEDY,
FONTIBON,
ENGATIVA,
SUBA,
A_NARINO,
P_ARANDA,
ZHF_4_TRAT_DESARR,
ZHF_4_TRAT_MEJ,
AREA_ACT2,
AREA_ACT6,
ZHF_6_TOPOG_PLANA,
ZHF_10_EST_VIA_MALO,
GA1,
GA2,
GA3,
GB1,
GB2,
GB3,
GB4,
Tip7,
ZHF_1213_13,
ZHF_1213_17,
ZHF_1213_21,
ZHF_1213_22,
ZHF_1213_23,
C_BOLIVAR,
DUMMY_SOB_2020_M06_123,
DUMMY_SUB_2020_M06_123,
PUNTAJE,
RAFAEL_U_U,
USME,

VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA./*,  VALOR_AVALUO_COM_2019*/
FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M06_123');
QUIT;



PROC SQL;    CREATE TABLE FILTRO_M06_456 AS /*M06 - DIFERENCIAS DUMMY*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
PUNTAJE,
EDAD,
IN_MIL_POL,
RELACION_AREA,
B_UNIDOS,
CHAPINERO,
COL_PUB,
CONSERVACION_I,
COORDENADA_Y,
DENSIDAD,
ZHF_1213_22,
ZHF_1213_15,
ZHF_1213_16,
ZHF_1213_13,
ZHF_10_EST_VIA_BUENO,
Tip2,
USAQUEN,
TEUSAQUILLO,
SUBA,
FONTIBON,
ZHF_1213_14,
ZHF_10_EST_VIA_REG,
DUMMY_SOB_2020_M06_456,
DUMMY_SUB_2020_M06_456,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA.
FROM PRUEBA.INCORRECTO_VI_MODEL 
WHERE (COMPARA_VAL_INT='INCORREC' AND LIQUIDACION = 'MODEL' AND MODELO_0 = 'M06_456');
QUIT;

proc export data=FILTRO_M01_1   outfile="&RUTA.\DIF_M01_1.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M01_2   outfile="&RUTA.\DIF_M01_2.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M01_3   outfile="&RUTA.\DIF_M01_3.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M02_4   outfile="&RUTA.\DIF_M02_4.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M02_5   outfile="&RUTA.\DIF_M02_5.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M02_6   outfile="&RUTA.\DIF_M02_6.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M03   outfile="&RUTA.\DIF_M03_OFI.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M04   outfile="&RUTA.\DIF_M04_COMER.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M05   outfile="&RUTA.\DIF_M05_BODEG.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M06_123   outfile="&RUTA.\DIF_M06_123_BIFAM.txt"   dbms=dlm  replace;  delimiter='|';  RUN;
proc export data=FILTRO_M06_456   outfile="&RUTA.\DIF_M06_456_BIFAM.txt"   dbms=dlm  replace;  delimiter='|';  RUN;





/*-------------------------------------------------------------------------------------------------------------------------------------
											RESUMEN DIFERENCIAS
/*-------------------------------------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------------------------------------
											RESUMEN DIFERENCIAS
/*-------------------------------------------------------------------------------------------------------------------------------------*/
PROC SQL;  CREATE TABLE NRO_MODELO AS SELECT  /*CANTIDAD DE PREDIOS BASE PREDIAL URBANA X MODELO*/
LIQUIDACION, NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE. 
/*FROM PRUEBA.PREDIO_VISTA_2020_MODELOS*/
WHERE (ID_UR_RU IN ('0') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY LIQUIDACION, NOMBRE_MODELO_0;
QUIT;


PROC SQL;  CREATE TABLE NRO_MODELO_ACT AS SELECT  /*CANTIDAD DE PREDIOS "ACTUALIZADOS" BASE PREDIAL URBANA X MODELO*/
LIQUIDACION, NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM PRUEBA.VISTA_MODELO_UNID_LIQ_ACTUALI 
WHERE (ID_UR_RU IN ('0') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY LIQUIDACION, NOMBRE_MODELO_0;
QUIT;

PROC SQL;	CREATE TABLE RES_PREDIOS_DIFER_MODEL_0  AS
		SELECT A.*, B.N_PREDIOS AS PREDIOS_ACTUALIZADOS
				FROM NRO_MODELO AS A LEFT JOIN NRO_MODELO_ACT AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0;
QUIT;

PROC SQL;  CREATE TABLE NRO_MODELO_COMUN AS SELECT  /*CANTIDAD DE PREDIOS "ACTUALIZADOS" BASE PREDIAL URBANA X MODELO*/
LIQUIDACION, NOMBRE_MODELO_0, COUNT(distinct llave) AS N_PREDIOS
FROM PRUEBA.MODELOSIS_VACIOS 
WHERE (ID_UR_RU IN ('0') /*AND  UNIDAD_LIQUIDACION IN (1)*/)
GROUP BY LIQUIDACION, NOMBRE_MODELO_0;
QUIT;

PROC SQL;	CREATE TABLE RES_PREDIOS_DIFER_MODEL_1  AS
		SELECT A.*, B.N_PREDIOS AS PREDIOS_COMPARADOS_SIS_EST
FROM RES_PREDIOS_DIFER_MODEL_0 AS A LEFT JOIN NRO_MODELO_COMUN AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0;
QUIT;


/* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
PROC SQL; CREATE TABLE NRO_VAR_MODELO_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(DISTINCT LLAVE) AS N_PREDIOS
FROM INCORRECTO_MODELO 
/*WHERE (/*ID_UR_RU IN ('0') AND*/  /*FASE_EST IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL;	CREATE TABLE RES_PREDIOS_DIFER_MODEL  AS
		SELECT A.*, B.N_PREDIOS AS DIFERENCIA_VARIABLE_MODELO
				FROM RES_PREDIOS_DIFER_MODEL_1 AS A LEFT JOIN NRO_VAR_MODELO_DIFERENCIAS AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0;
QUIT;



/*  RESUMEN PREDIOS DIFERENCIAS VALORES TABLA NPH*/
PROC SQL; CREATE TABLE NRO_TABLA_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALORES TABLA NPH*/
NOMBRE_MODELO_0, COUNT(DISTINCT LLAVE) AS N_PREDIOS
FROM INCORRECTO_VR_TABL_NPH 
/*WHERE (/*ID_UR_RU IN ('0') AND*/  /*FASE_EST IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;


PROC SQL; CREATE TABLE NRO_AVES_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALORES TABLA NPH*/
NOMBRE_MODELO_0, COUNT(DISTINCT LLAVE) AS N_PREDIOS
FROM INCORRECTO_AVES
/*WHERE (/*ID_UR_RU IN ('0') AND*/  /*FASE_EST IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;



DATA NRO_TABLA_DIFERENCIAS; SET NRO_TABLA_DIFERENCIAS NRO_AVES_DIFERENCIAS; RUN;

/*  RESUMEN PREDIOS DIFERENCIAS VALOR INTEGRAL PH*/
PROC SQL; CREATE TABLE NRO_VIMODELO_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR INTEGRAL MODELO PH*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM  PRUEBA.INCORRECTO_VI_MODEL
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VI_T23DEPOSPH_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR INTEGRAL T23 DEPOSITO TABLA PH*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM  INCORRECTO_VI_DEPOSITOS
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VI_T21T22PARQPH_DIFERENCIAS AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALORE INTEGRAL T21 Y T22 PARQUEADERO PH*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM  INCORRECTO_T21T22_PARQ_VI
GROUP BY NOMBRE_MODELO_0;
QUIT;

DATA TDIFERENCIAS_VI; /*CONSOLIDADO DIFERENCIA VALOR INTEGRAL*/
SET NRO_VIMODELO_DIFERENCIAS NRO_VI_T23DEPOSPH_DIFERENCIAS NRO_VI_T21T22PARQPH_DIFERENCIAS; RUN;


PROC SQL;	CREATE TABLE RESUMEN_PREDIOS_DIF1  AS
		SELECT A.*, B.N_PREDIOS AS DIFERENCIA_VALOR_TABLA
				FROM RES_PREDIOS_DIFER_MODEL AS A LEFT JOIN NRO_TABLA_DIFERENCIAS AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0;
QUIT;

PROC SQL;	CREATE TABLE RESUMEN_PREDIOS_DIF2  AS
		SELECT A.*, B.N_PREDIOS AS DIFERENCIA_VALOR_INTEGRAL
				FROM RESUMEN_PREDIOS_DIF1 AS A LEFT JOIN TDIFERENCIAS_VI  AS B  
				ON	A.NOMBRE_MODELO_0 = B.NOMBRE_MODELO_0
ORDER BY LIQUIDACION, NOMBRE_MODELO_0;
QUIT;


/*********************************************************************
RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO===>  USOS MULTIPLES
**********************************************************************/

PROC SQL; CREATE TABLE NRO_MODELO_UM AS SELECT
LIQUIDACION, MODELO_USO, COUNT(*) AS N_UNIDADESC
FROM COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE. /*PRUEBA.PREDIO_VISTA_2020_MODELOS*/ 
WHERE (ID_UR_RU IN ('0') AND  NOMBRE_MODELO_0 IN('Usos Múltiples'))
GROUP BY LIQUIDACION, MODELO_USO;
QUIT;

PROC SQL; CREATE TABLE NRO_VAR_MODELO_DIFERENCIAS_UM AS SELECT
MODELO_USO, COUNT(*) AS N_UNIDADESC
FROM INCORRECTO_MODELO
WHERE (NOMBRE_MODELO_0 IN('Usos Múltiples') )
GROUP BY MODELO_USO;
QUIT;

PROC SQL;	CREATE TABLE RES_UNIDADES_DIFERENCIAS_UM  AS
		SELECT A.*, B.N_UNIDADESC AS DIFERENCIA_VAR_MODELO
				FROM NRO_MODELO_UM AS A LEFT JOIN NRO_VAR_MODELO_DIFERENCIAS_UM AS B  
				ON	A.MODELO_USO = B.MODELO_USO;
QUIT;


/*  RESUMEN PREDIOS DIFERENCIAS VALORES TABLA*/
PROC SQL;
CREATE TABLE NRO_TABLA_DIFERENCIAS_UM AS SELECT
MODELO_APLICADO_EST, COUNT(*) AS N_UNIDADESC
FROM INCORRECTO_VR_TABL_NPH 
WHERE (NOMBRE_MODELO_0 IN('Usos Múltiples') )
GROUP BY MODELO_APLICADO_EST;
QUIT;

PROC SQL;	CREATE TABLE RESUMEN_DIFERENCIAS_UM  AS
		SELECT A.*, B.N_UNIDADESC AS DIFERENCIA_VALOR_TABLA
				FROM RES_UNIDADES_DIFERENCIAS_UM  AS A LEFT JOIN NRO_TABLA_DIFERENCIAS_UM AS B  
				ON	A.MODELO_USO = B.MODELO_APLICADO_EST;
QUIT;

PROC EXPORT DATA= RESUMEN_PREDIOS_DIF2 
			outfile= "\\prowin02\dospina\SASFILES\Verificacion_Calculos_2020\EXPORT\RESUMEN_DIFERENCIAS.xlsx" 
			dbms=xlsx replace;
			sheet="Resumen Diferencia Predios";
			RUN;

PROC EXPORT DATA= RESUMEN_DIFERENCIAS_UM
			outfile= "\\prowin02\dospina\SASFILES\Verificacion_Calculos_2020\EXPORT\RESUMEN_DIFERENCIAS.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Uso Multiples-UNCal";
			RUN;

PROC EXPORT DATA= INCORRECTO_MODELO
			outfile= "\\prowin02\dospina\SASFILES\Verificacion_Calculos_2020\EXPORT\BD_DIFERENCIAS_VARIABLE_MODELO.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Uso Multiples-UNCal";
			RUN;
/*************************************************************
  TABLA VALORES TERRENO:

  COMPARACIÓN VALORES COMERCIALES Y CATASTRALES A NIVEL PREDIO 
***************************************************************/

PROC SQL; CREATE TABLE PRUEBA.PREDIOS_AVALUO_SIIC AS SELECT * FROM ODBCLIB.VALORES_TERRENO 
WHERE VIGENCIA=&VIGENCIA.;
QUIT; 

DATA PREDIO_FINAL_&FECHA_CORTE.; SET COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE.; IF UNIDAD_LIQUIDACION =1; 
IF VALOR_AVALUO_COM_2020 = . THEN VALOR_AVALUO_COM_2020 = 0;
IF VALOR_M2_CONSTRUCCION_&VIGENCIA. = . THEN VALOR_M2_CONSTRUCCION_&VIGENCIA. = 0;
IF VALOR_M2_TERRENO_COR_20 = . THEN VALOR_M2_TERRENO_COR_20 = 0;
IF VALOR_AVALUO_CAT = . THEN VALOR_AVALUO_CAT = 0;
IF VALOR_M2_CONSTRUCCION_CAT_2020 = . THEN VALOR_M2_CONSTRUCCION_CAT_2020 = 0;
IF VALOR_M2_TERRENO_CAT_2020 = . THEN VALOR_M2_TERRENO_CAT_2020 = 0;
RUN;

PROC SQL; CREATE TABLE AVALUO_SIS_EST2  AS /* TABLA VALORES_TERRENO*/
		SELECT A.*, B.MODELO_USO, B.NOMBRE_MODELO_0, B.UNIDAD_LIQUIDACION, B.ID_UR_RU
		FROM  PRUEBA.PREDIOS_AVALUO_SIIC AS A LEFT JOIN PREDIO_FINAL_&FECHA_CORTE. AS B
				ON A.CODIGO_BARRIO =B.CODIGO_BARRIO &
				   A.CODIGO_MANZANA=B.CODIGO_MANZANA &
				   A.CODIGO_PREDIO=B.CODIGO_PREDIO &
				   A.CODIGO_CONSTRUCCION=B.CODIGO_CONSTRUCCION &
				   A.CODIGO_RESTO=B.CODIGO_RESTO;
QUIT;


PROC SQL; CREATE TABLE AVALUO_SIS_EST  AS /* TABLA VALORES_TERRENO*/
		SELECT A.CHIP, A.CODIGO_BARRIO,A.CODIGO_MANZANA, A.CODIGO_PREDIO, A.CODIGO_CONSTRUCCION, A.CODIGO_RESTO, A.MODELO_0,
		A.NOMBRE_MODELO_0, A.MODELO_USO, A.UNIDAD_LIQUIDACION, A.ID_UR_RU,
	   
A.VALOR_UNITARIO_&VIGENCIA.,
A.VALOR_UNITARIO_AVESP_2020,
A.VALOR_INTEGRAL_&VIGENCIA., A.PRODUCTO_&VIGENCIA.,

B.AREA_TERR_SIIC, A.AREA_TERRENO,  B.AREA_TERR_TRAN,
B.AREA_CONS_SIIC, A.AREA_CONSTRUIDA, B.AREA_CONS_TRAN,

B.AVLO_TOTL_SIIC, A.VALOR_AVALUO_COM_2020,  B.AVLO_TOTL_TRAN,

CASE /*WHEN ABS((AVLO_TOTL_TRAN/AREA_CONS_TRAN)-(VALOR_AVALUO_COM_2020/AREA_CONSTRUIDA))<5000 THEN 'CORRECTO'*/
	 WHEN (MODELO_0 IN ('M01_1', 'M01_2', 'M01_3', 'M02_4', 'M02_5', 'M02_6', 'M03', 'M04', 'M05', 'M06_123',  'M06_456') AND ABS((AVLO_TOTL_TRAN/AREA_CONS_TRAN)-(VALOR_AVALUO_COM_2020/AREA_CONSTRUIDA))<5000) THEN 'CORRECTO'
	 WHEN (MODELO_0 IN ('M01_1', 'M01_2', 'M01_3', 'M02_4', 'M02_5', 'M02_6', 'M03', 'M04', 'M05', 'M06_123',  'M06_456') AND (ABS(A.VALOR_AVALUO_COM_2020-B.AVLO_TOTL_TRAN)) < 50000) THEN 'CORRECTO' 
     WHEN (MODELO_0 NOT IN ('M01_1', 'M01_2', 'M01_3', 'M02_4', 'M02_5', 'M02_6', 'M03', 'M04', 'M05', 'M06_123',  'M06_456') AND (ABS(A.VALOR_AVALUO_COM_2020-B.AVLO_TOTL_TRAN)) < 50000) THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_AVCOM,

A.VALOR_M2_CONSTRUCCION_&VIGENCIA., B.VALR_CONS_TRAN,
CASE  WHEN (ABS(A.VALOR_M2_CONSTRUCCION_&VIGENCIA.-B.VALR_CONS_TRAN)) < 5000 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_VRM2CONSCOM,

A.VALOR_M2_TERRENO_COR_20, B.VALR_TERR_TRAN,
CASE  WHEN (ABS(A.VALOR_M2_TERRENO_COR_20-B.VALR_TERR_TRAN)) < 1 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_VRM2TERRCOR,

A.VALOR_AVALUO_CAT, B.AVLO_TOTL_PORC, 
CASE  WHEN (ABS(A.VALOR_AVALUO_CAT-B.AVLO_TOTL_PORC)) < 50000 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_AVCAT,
	
A.VALOR_M2_CONSTRUCCION_CAT_2020, B.VALR_CONS_PORC,
CASE  WHEN (ABS(A.VALOR_M2_CONSTRUCCION_CAT_2020-B.VALR_CONS_PORC)) < 5000 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_VRM2CONSCAT,

A.VALOR_M2_TERRENO_CAT_2020, B.VALR_TERR_PORC,
CASE   WHEN (ABS(A.VALOR_M2_TERRENO_CAT_2020-B.VALR_TERR_PORC)) < 1 THEN 'CORRECTO' ELSE 'INCORREC' END AS DIF_VRM2TERRCAT,

B.FECHA_CORRIDA

			FROM PREDIO_FINAL_&FECHA_CORTE. AS A LEFT JOIN PRUEBA.PREDIOS_AVALUO_SIIC AS B
				ON A.CODIGO_BARRIO =B.CODIGO_BARRIO &
				   A.CODIGO_MANZANA=B.CODIGO_MANZANA &
				   A.CODIGO_PREDIO=B.CODIGO_PREDIO &
				   A.CODIGO_CONSTRUCCION=B.CODIGO_CONSTRUCCION &
				   A.CODIGO_RESTO=B.CODIGO_RESTO;
QUIT; 

PROC SQL; CREATE TABLE NROTOT_PREDIOS_X_MODELO AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM AVALUO_SIS_EST 
WHERE (/*ID_UR_RU IN ('0') AND*/    UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NROTOT_PREDIOS_URB AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS_URB
FROM AVALUO_SIS_EST 
WHERE (ID_UR_RU IN ('0') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_PRED_TAB_TERREN AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_TAB_TERRENO_SIS
FROM AVALUO_SIS_EST2 
/*WHERE (/*ID_UR_RU IN ('0') AND   UNIDAD_LIQUIDACION IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS1 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS AVALUO COMERCIAL*/
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_AVCOM
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_AVCOM IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS2 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR M2 DE LA CONSTRUCCION COMERCIAL*/
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_VRM2CONSCOM
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_VRM2CONSCOM IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS3 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR M2 TERRENO CORREGIDO COMERCIAL */
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_VRM2TERRCOR
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_VRM2TERRCOR IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS4 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS AVALUO CATASTRAL*/
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_AVCAT
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_AVCAT IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS5 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR M2 DE LA CONSTRUCCION CATASTRAL*/
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_VRM2CONSCAT
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_VRM2CONSCAT IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_VALORESAV_DIFERENCIAS6 AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VALOR M2 TERRENO CATASTRAL */
NOMBRE_MODELO_0, COUNT(*) AS N_DIF_VRM2TERRCAT
FROM AVALUO_SIS_EST
WHERE (/*ID_UR_RU IN ('0') AND*/  DIF_VRM2TERRCAT IN ('INCORREC') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;





DATA PRUEBA.DIF_TABLA_VALORES_TERRENO;
MERGE NROTOT_PREDIOS_X_MODELO (IN=A0) NROTOT_PREDIOS_URB (IN=A1) NRO_PRED_TAB_TERREN (IN=A2) NRO_VALORESAV_DIFERENCIAS1 (IN=A3) NRO_VALORESAV_DIFERENCIAS2 (IN=A4) NRO_VALORESAV_DIFERENCIAS3 (IN=A5)
NRO_VALORESAV_DIFERENCIAS4 (IN=A6) NRO_VALORESAV_DIFERENCIAS5 (IN=A7) NRO_VALORESAV_DIFERENCIAS6 (IN=A8);
BY NOMBRE_MODELO_0;  RUN;

PROC EXPORT DATA= PRUEBA.DIF_TABLA_VALORES_TERRENO
			outfile= "\\prowin02\dospina\SASFILES\Verificacion_Calculos_2020\EXPORT\RESUMEN_DIFERENCIAS_TABLA_VALORES_TERRENO.xlsx" 
			dbms=xlsx replace;
			sheet="Diferencia Valores Terreno";
			RUN;

PROC SQL; CREATE TABLE BASE_DIF_VALORESTERR AS SELECT  /* BASE PREDIOS CON DIFERENCIAS AVALUO COMERCIAL*/
CHIP, CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, MODELO_0, NOMBRE_MODELO_0,  
VALOR_AVALUO_COM_2020, AVLO_TOTL_TRAN, DIF_AVCOM,
VALOR_M2_CONSTRUCCION_&VIGENCIA., VALR_CONS_TRAN, DIF_VRM2CONSCOM, 
VALOR_M2_TERRENO_COR_20, VALR_TERR_TRAN, DIF_VRM2TERRCOR,
VALOR_AVALUO_CAT, AVLO_TOTL_PORC, DIF_AVCAT,
VALOR_M2_CONSTRUCCION_CAT_2020, VALR_CONS_PORC, DIF_VRM2CONSCAT,
VALOR_M2_TERRENO_CAT_2020, VALR_TERR_PORC, DIF_VRM2TERRCAT
FROM AVALUO_SIS_EST
WHERE (DIF_AVCOM IN ('INCORREC') or DIF_VRM2CONSCOM IN ('INCORREC') or DIF_VRM2TERRCOR IN ('INCORREC') or DIF_AVCAT IN ('INCORREC') 
       or DIF_VRM2CONSCAT IN ('INCORREC') or  DIF_VRM2TERRCAT IN ('INCORREC') );
QUIT;

proc export data=BASE_DIF_VALORESTERR outfile='\\prowin02\dospina\SASFILES\Verificacion_Calculos_2020\EXPORT\BASE_DIF_VALORESTERR.txt'   dbms=dlm  replace;  delimiter='|';  
RUN;

PROC EXPORT DATA= BASE_DIF_VALORESTERR  
			outfile= "\\prowin02\dospina\SASFILES\Verificacion_Calculos_2020\EXPORT\BASE_DIF_VALORESTERR.xlsx" 
			dbms=xlsx replace;
			sheet="Resumen Diferencia";
			RUN;



PROC SQL; CREATE TABLE NROTOT_PREDIOS_X_MODELO AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS
FROM AVALUO_SIS_EST 
WHERE (/*ID_UR_RU IN ('0') AND*/    UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NROTOT_PREDIOS_URB AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_PREDIOS_URB
FROM AVALUO_SIS_EST 
WHERE (ID_UR_RU IN ('0') AND  UNIDAD_LIQUIDACION IN (1))
GROUP BY NOMBRE_MODELO_0;
QUIT;

PROC SQL; CREATE TABLE NRO_PRED_TAB_TERREN AS SELECT  /* RESUMEN PREDIOS CON DIFERENCIAS VARIABLE MODELO*/
NOMBRE_MODELO_0, COUNT(*) AS N_TAB_TERRENO_SIS
FROM AVALUO_SIS_EST2 
/*WHERE (/*ID_UR_RU IN ('0') AND   UNIDAD_LIQUIDACION IN (1))*/
GROUP BY NOMBRE_MODELO_0;
QUIT;



PROC SQL;    CREATE TABLE t2 AS 
   SELECT t1.* 
         FROM /*prueba.PREDIO_VISTA_2018_PRODUC_USOP_MZ PREDIOS_MODELO VISTA_NUEVO_MODELO*/PRUEBA.BD_PREDIOS_MAS_USOMU_V3/*VISTA_NUEVO_MODELO_A*/ t1
      WHERE t1.CODIGO_BARRIO = '002453' AND t1.CODIGO_MANZANA = '01' AND t1.CODIGO_PREDIO = '01' AND 
           t1.CODIGO_CONSTRUCCION = '000' AND CODIGO_RESTO = '00009';
QUIT;

PROC SQL;   CREATE TABLE t3 AS 
   SELECT t1.* 
         FROM /*prueba.PREDIO_VISTA_2018_PRODUC_USOP_MZ PREDIOS_MODELO VISTA_NUEVO_MODELO*/PRUEBA.BD_PREDIOS_MAS_USOMU_V3/*VISTA_NUEVO_MODELO_A*/ t1
      WHERE t1.CODIGO_BARRIO = '001315' AND t1.CODIGO_MANZANA = '19' AND t1.CODIGO_PREDIO = '01' AND 
           t1.CODIGO_CONSTRUCCION = '000' AND CODIGO_RESTO = '00000';
QUIT;

PROC SQL;    CREATE TABLE t4 AS 
   SELECT t1.* 
         FROM /*prueba.PREDIO_VISTA_2018_PRODUC_USOP_MZ PREDIOS_MODELO VISTA_NUEVO_MODELO*/COMUN.PREDIO_Y_UM_FINAL_181217/*VISTA_NUEVO_MODELO_A*/ t1
      WHERE t1.CODIGO_BARRIO = '001315' AND t1.CODIGO_MANZANA = '19' AND t1.CODIGO_PREDIO = '01' AND 
           t1.CODIGO_CONSTRUCCION = '000' AND CODIGO_RESTO = '00000';
QUIT;



PROC SQL;	CREATE TABLE t2 AS 
   SELECT t1.* 
         FROM /*prueba.PREDIO_VISTA_2018_PRODUC_USOP_MZ PREDIOS_MODELO VISTA_NUEVO_MODELO*/ PRUEBA.AVALUOS_ESPECIALES_OR_2019/*VISTA_NUEVO_MODELO_A*/ t1
      WHERE t1.CODIGO_BARRIO = '002508' AND t1.CODIGO_MANZANA = '26' AND t1.CODIGO_PREDIO = '18' AND 
           t1.CODIGO_CONSTRUCCION = '000' AND CODIGO_RESTO = '00000';
QUIT;

PROC SQL;    CREATE TABLE FILTRO_M05_SISEST AS /*M05 - DIFERENCIAS*/
   SELECT CODIGO_BARRIO, CODIGO_MANZANA, CODIGO_PREDIO, CODIGO_CONSTRUCCION, CODIGO_RESTO, UNIDAD_CALIFICADA, CODIGO_USO, MODELO_0,
VALOR_REFERENCIA_2020,
AREA_CONSTRUIDA,
COORDENADA_Y,
USO_091,
USAQUEN,
SUBA,
SANTAFE,
SAN_CRISTOBAL,
RAFAEL_U_U,
P_ARANDA,
MARTIRES,
KENNEDY,
FONTIBON,
ENGATIVA,
BOSA,
B_UNIDOS,
CENT_CLL_72_CLL_100,
CENT_SUBA,
CENT_RESTREPO_SANT,
ZHF_1213_33,
ARMAZON_FERROCONCRETO,
DUMMY_STABARBAR,
DUMMY_SALITHAYU,
AREA_TERRENO,
PUNTAJE,
USME,
DUMMY_SOB_2020_M05,
DUMMY_SUB_2020_M05,
VALOR_INTEGRAL_SIS, VALOR_INTEGRAL_&VIGENCIA.,/*,  VALOR_AVALUO_COM_2020*/
COMPLEMENTO_INDUSTRIA,
CERCHA_LIVIANA,
CERCHA_MEDIANA
FROM PRUEBA.MODELOSIS_VACIOS 
WHERE (MODELO_0 = 'M05');
QUIT;


DATA /*M05. Bodegas + Industria PH*/ t1; set FILTRO_M05_COMUN;
 
/*IF MODELO_0='M05';*/

CERCHA_LIVIANA =0;
CERCHA_MEDIANA =0;
CERCHA_PESADA =0;
IF COMPLEMENTO_INDUSTRIA IN ('514') AND 0<AREA_CONSTRUIDA <= 10000 THEN CERCHA_MEDIANA =1;ELSE DO;
IF COMPLEMENTO_INDUSTRIA NOT IN ('514') AND 0<AREA_CONSTRUIDA <= 1000 THEN CERCHA_LIVIANA =1;ELSE DO;
IF COMPLEMENTO_INDUSTRIA IN ('000','') AND   AREA_CONSTRUIDA > 10000  THEN CERCHA_PESADA =1;ELSE DO;
IF COMPLEMENTO_INDUSTRIA IN ('000','') AND 0<AREA_CONSTRUIDA <= 10000 THEN CERCHA_LIVIANA =1;ELSE DO;
IF COMPLEMENTO_INDUSTRIA IN ('511','512') THEN CERCHA_LIVIANA =1;
IF COMPLEMENTO_INDUSTRIA IN ('513') AND   AREA_CONSTRUIDA > 10000 THEN CERCHA_MEDIANA =1;
IF COMPLEMENTO_INDUSTRIA IN ('514','515') AND AREA_CONSTRUIDA > 10000 THEN CERCHA_PESADA =1;
END; END; END; END;

CERCHA_LIVIANA =0;
CERCHA_MEDIANA =0;
CERCHA_PESADA =0;
IF COMPLEMENTO_INDUSTRIA IN ('514') AND 0<AREA_CONSTRUIDA <= 10000 THEN CERCHA_MEDIANA =1;
IF COMPLEMENTO_INDUSTRIA NOT IN ('514') AND 0<AREA_CONSTRUIDA <= 1000 THEN CERCHA_LIVIANA =1;
IF COMPLEMENTO_INDUSTRIA IN ('000','') AND   AREA_CONSTRUIDA > 10000  THEN CERCHA_PESADA =1;
IF COMPLEMENTO_INDUSTRIA IN ('000','') AND 0<AREA_CONSTRUIDA <= 10000 THEN CERCHA_LIVIANA =1;
IF COMPLEMENTO_INDUSTRIA IN ('511','512') THEN CERCHA_LIVIANA =1;
IF COMPLEMENTO_INDUSTRIA IN ('513') AND   AREA_CONSTRUIDA > 10000 THEN CERCHA_MEDIANA =1;
IF COMPLEMENTO_INDUSTRIA IN ('514','515') AND AREA_CONSTRUIDA > 10000 THEN CERCHA_PESADA =1;

RUN;




DATA mejora; set EGTASK.FILTER_FOR_PREDIO_Y_UM_FINAL_191;  
IF VALOR_M2_CONSTRUCCION_&VIGENCIA. = 0 THEN VALOR_M2_CONSTRUCCION_&VIGENCIA.=.;
IF VALOR_AVALUO_COM_2020 = 0 THEN VALOR_AVALUO_COM_2020 =.;
RUN;

PROC EXPORT DATA= EGTASK.FILTER_FOR_PREDIO_Y_UM_FINAL_191
			outfile= "\\prowin02\dospina\SASFILES\Verificacion_Calculos_2020\EXPORT\MEJORAS_191111.xlsx" 
			dbms=xlsx replace;
			sheet="MEJORAS";
			RUN;


%LET _CLIENTTASKFILTER = UNIDAD_LIQUIDACION = 1;
TITLE;
TITLE1 "Tablas de sumarización";
FOOTNOTE;
FOOTNOTE1 "Generado por el Sistema SAS (&_SASSERVERNAME, &SYSSCPL) el %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) a las %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))";
/* -------------------------------------------------------------------
   Código generado por una Tarea SAS

   Generado el: miércoles, 13 de noviembre de 2019 a las 11:04:15
   Por la tarea: Tablas de sumarización (2)

   Datos de entrada: SASApp:EGTASK.FILTER_FOR_PREDIO_Y_UM_FINAL_191
   Servidor:  SASApp
   ------------------------------------------------------------------- */


/* -------------------------------------------------------------------
   Ejecutar el procedimiento tabulate
   ------------------------------------------------------------------- */
PROC TABULATE
DATA=MEJORA
	
	;
	WHERE( UNIDAD_LIQUIDACION = 1);
	
	VAR VALOR_M2_CONSTRUCCION_&VIGENCIA. VALOR_AVALUO_COM_2020;
	CLASS PRED_URB /	ORDER=UNFORMATTED MISSING;
	CLASS MODELO_0 /	ORDER=UNFORMATTED MISSING;
	CLASS NOMBRE_MODELO_0 /	ORDER=UNFORMATTED MISSING;
	TABLE /* Dimensión de la fila */
MODELO_0*
  NOMBRE_MODELO_0,
/* Dimensión de la columna */
PRED_URB*(
  VALOR_M2_CONSTRUCCION_&VIGENCIA.*(
    N 
    NMiss) 
  VALOR_AVALUO_COM_2020*(
    N 
    NMiss)) 		;
	;

RUN;
/* -------------------------------------------------------------------
   Fin de código de la tarea
   ------------------------------------------------------------------- */
RUN; QUIT;
TITLE; FOOTNOTE;
%SYMDEL _CLIENTTASKFILTER;


PROC SQL;
   CREATE TABLE EGTASK.FILTER_FOR_PREDIO_Y_UM_FINA AS 
   SELECT t1.CHIP, 
          t1.CODIGO_LOCALIDAD, 
          t1.NOMBRE_BARRIO, 
          t1.CODIGO_BARRIO, 
          t1.CODIGO_MANZANA, 
          t1.CODIGO_PREDIO, 
          t1.CODIGO_CONSTRUCCION, 
          t1.CODIGO_RESTO, 
          t1.AREA_TERRENO, 
          t1.AREA_CONSTRUIDA, 
          t1.ZHF_2020, 
          t1.VALOR_M2_CONSTRUCCION_&VIGENCIA., 
          t1.VALOR_AVALUO_COM_2020, 
          t1.MODELO_0, 
          t1.NOMBRE_MODELO_0, 
          t1.CODIGO_DESTINO, 
          t1.EDAD, 
          t1.PUNTAJE, 
          t1.ACTUALIZADO,
		  t1.VALOR_REFERENCIA_2020,
		  t1.VALOR_M2_TERRENO_COR_20
      FROM COMUN.PREDIO_Y_UM_FINAL_191115 t1
      WHERE t1.ACTUALIZADO = 1 AND t1.UNIDAD_LIQUIDACION = 1 AND t1.PRED_RUR=1;
QUIT;


DATA FILTRO_rural; SET COMUN.PREDIO_Y_UM_FINAL_191204;
IF PRED_RUR IN (1);
/*DROP AVALUO_TOTAL_PUNTUAL_COM_2019 VALOR_INTEGRAL_COM_2019;*/
KEEP CHIP	CODIGO_LOCALIDAD	NOMBRE_BARRIO	CODIGO_BARRIO	CODIGO_MANZANA	CODIGO_PREDIO	CODIGO_CONSTRUCCION	CODIGO_RESTO	
AREA_TERRENO	AREA_CONSTRUIDA	ZHF_2020	VALOR_M2_CONSTRUCCION_&VIGENCIA.	VALOR_AVALUO_COM_2020	MODELO_0	NOMBRE_MODELO_0	CODIGO_DESTINO	EDAD	
PUNTAJE	ACTUALIZADO;
RUN;


PROC SQL; CREATE TABLE CONSULTA_RURAL /*PEGADO INFORMACION 2018 PARA COMPARACION Y VARIACIONES*/
AS SELECT A.*, B.AVALUO_TOTAL_PUNTUAL_COM_2019, B.VALOR_INTEGRAL_COM_2019, B.VALOR_M2_CONS_COM_2019, B.VALOR_M2_TERRENO_COM_2019, B.VALOR_M2_CONS_COM_2019
FROM FILTRO_rural AS A LEFT JOIN PRUEBA.PREDIO_FINAL_2019 AS B ON
cat(A.CODIGO_BARRIO,A.CODIGO_MANZANA,A.CODIGO_PREDIO,A.CODIGO_CONSTRUCCION,A.CODIGO_RESTO) =
cat(B.CODIGO_BARRIO,B.CODIGO_MANZANA,B.CODIGO_PREDIO,B.CODIGO_CONSTRUCCION,B.CODIGO_RESTO);
QUIT;

PROC SQL; CREATE TABLE CONSULTA_RURAL2 /*PEGADO INFORMACION 2018 PARA COMPARACION Y VARIACIONES*/
AS SELECT A.*, B.AVALUO_TOTAL_PUNTUAL_COM_2019 AS AVALUO_TOTAL_PUNTUAL_COM_2019_C, /*B.VALOR_INTEGRAL_COM_2019 AS VALOR_INTEGRAL_COM_2019_C, */
B.VALOR_M2_CONS_COM_2019 AS VALOR_M2_CONS_COM_2019_C
FROM CONSULTA_RURAL AS A LEFT JOIN PRUEBA.PREDIO_FINAL_2019 AS B ON
A.CHIP = B.CHIP;
QUIT;

DATA CONSULTA_RURAL3; SET CONSULTA_RURAL2;
variacion_com = (VALOR_AVALUO_COM_2020 - AVALUO_TOTAL_PUNTUAL_COM_2019) /AVALUO_TOTAL_PUNTUAL_COM_2019;
variacion_vconst_com = (VALOR_M2_CONSTRUCCION_&VIGENCIA. -VALOR_M2_CONS_COM_2019) /VALOR_M2_CONS_COM_2019;

variacion_com_CHIP = (VALOR_AVALUO_COM_2020 - AVALUO_TOTAL_PUNTUAL_COM_2019_C) /AVALUO_TOTAL_PUNTUAL_COM_2019_C;
variacion_vconst_com_CHIP = (VALOR_M2_CONSTRUCCION_&VIGENCIA. -VALOR_M2_CONS_COM_2019_C) /VALOR_M2_CONS_COM_2019_C;
KEEP CHIP	CODIGO_LOCALIDAD	NOMBRE_BARRIO	CODIGO_BARRIO	CODIGO_MANZANA	CODIGO_PREDIO	CODIGO_CONSTRUCCION	CODIGO_RESTO	
AREA_TERRENO	AREA_CONSTRUIDA	ZHF_2020	VALOR_M2_CONSTRUCCION_&VIGENCIA.	VALOR_AVALUO_COM_2020	MODELO_0	NOMBRE_MODELO_0	CODIGO_DESTINO	EDAD	
PUNTAJE	ACTUALIZADO	AVALUO_TOTAL_PUNTUAL_COM_2019	VALOR_INTEGRAL_COM_2019	VALOR_M2_CONS_COM_2019	AVALUO_TOTAL_PUNTUAL_COM_2019_C	VALOR_M2_CONS_COM_2019_C	variacion_com	variacion_vconst_com	variacion_com_CHIP	variacion_vconst_com_CHIP
VALOR_M2_TERRENO_COM_2019;
RUN;



PROC EXPORT DATA= CONSULTA_RURAL3
			outfile= "\\prowin02\dospina\SASFILES\Verificacion_Calculos_2020\EXPORT\RURAL_191203.xls" 
			dbms=xls replace;
			sheet="RURALES";
			RUN;



PROC SQL;
   CREATE TABLE t1 AS 
   SELECT t1.* 
         FROM comun.PREDIO_Y_UM_FINAL_191210/*VISTA_NUEVO_MODELO_A*/ t1
      WHERE t1.CHIP IN ('AAA0131YDPP');
QUIT;

PROC SQL;
   CREATE TABLE t1 AS 
   SELECT t1.* 
         FROM PRUEBA.PREDIO_2020_COMERCIAL_A/*VISTA_NUEVO_MODELO_A*/ t1
      WHERE t1.CHIP IN ('AAA0131YDPP');
QUIT;

DATA TX; SET T1; 
/*IF AREA_CONSTRUIDA = . THEN AREA_CONSTRUIDA =0;*/
VALOR_AVALUO_CAT=AREA_TERRENO*VALOR_M2_TERRENO_CAT_2020 + AREA_CONSTRUIDA*VALOR_M2_CONSTRUCCION_CAT_2020;
KEEP CHIP AREA_TERRENO VALOR_M2_TERRENO_CAT_2020 AREA_CONSTRUIDA VALOR_M2_CONSTRUCCION_CAT_2020 VALOR_AVALUO_CAT;
RUN;
 
DATA TX; SET COMUN.PREDIO_Y_UM_FINAL_&FECHA_CORTE.; 
IF VALOR_AVALUO_CAT=.;
/*IF AREA_CONSTRUIDA = . THEN AREA_CONSTRUIDA =0;*/
VALOR_AVALUO_CAT=AREA_TERRENO*VALOR_M2_TERRENO_CAT_2020 + AREA_CONSTRUIDA*VALOR_M2_CONSTRUCCION_CAT_2020;
KEEP CHIP actualizado CODIGO_BARRIO CODIGO_MANZANA CODIGO_PREDIO CODIGO_CONSTRUCCION CODIGO_RESTO VALOR_REFERENCIA_2020 MODELO_0 AREA_TERRENO VALOR_M2_TERRENO_CAT_2020 AREA_CONSTRUIDA VALOR_M2_CONSTRUCCION_CAT_2020 VALOR_AVALUO_CAT;
RUN;



data _null_;
  dur = datetime() - &_timer_start;
  put 30*'-' / ' TOTAL DURATION:' dur time13.2 / 30*'-';
run;